
EXTI_online2N.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000d6e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000006  00800060  00800060  00000de2  2**0
                  ALLOC
  2 .stab         00001254  00000000  00000000  00000de4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000e2d  00000000  00000000  00002038  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 ce 05 	jmp	0xb9c	; 0xb9c <__vector_1>
   8:	0c 94 01 06 	jmp	0xc02	; 0xc02 <__vector_2>
   c:	0c 94 34 06 	jmp	0xc68	; 0xc68 <__vector_3>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a6 36       	cpi	r26, 0x66	; 102
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 54 00 	call	0xa8	; 0xa8 <main>
  74:	0c 94 b5 06 	jmp	0xd6a	; 0xd6a <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <FUNC_led_ISR>:

#include "../Include/HAL/LED/LED_Interface.h"
#define F_CPU 8000000UL

void FUNC_led_ISR(void)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
	HLED_voidToggleLED(DIO_PORTA, PIN0);
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	60 e0       	ldi	r22, 0x00	; 0
  88:	0e 94 a5 06 	call	0xd4a	; 0xd4a <HLED_voidToggleLED>
}
  8c:	cf 91       	pop	r28
  8e:	df 91       	pop	r29
  90:	08 95       	ret

00000092 <FUNC_motor_ISR>:
void FUNC_motor_ISR(void)
{
  92:	df 93       	push	r29
  94:	cf 93       	push	r28
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
	HLED_voidToggleLED(DIO_PORTA, PIN1);
  9a:	80 e0       	ldi	r24, 0x00	; 0
  9c:	61 e0       	ldi	r22, 0x01	; 1
  9e:	0e 94 a5 06 	call	0xd4a	; 0xd4a <HLED_voidToggleLED>
}
  a2:	cf 91       	pop	r28
  a4:	df 91       	pop	r29
  a6:	08 95       	ret

000000a8 <main>:


int main ()
{
  a8:	df 93       	push	r29
  aa:	cf 93       	push	r28
  ac:	cd b7       	in	r28, 0x3d	; 61
  ae:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidInit();
  b0:	0e 94 4b 04 	call	0x896	; 0x896 <MDIO_voidInit>
	MEXTI_voidConfig(EXTI0, FALLING_EDGE);
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	62 e0       	ldi	r22, 0x02	; 2
  b8:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <MEXTI_voidConfig>
	MEXTI_voidSetCallBack(EXTI0,FUNC_led_ISR);
  bc:	2e e3       	ldi	r18, 0x3E	; 62
  be:	30 e0       	ldi	r19, 0x00	; 0
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	b9 01       	movw	r22, r18
  c4:	0e 94 8e 05 	call	0xb1c	; 0xb1c <MEXTI_voidSetCallBack>
	MEXTI_voidEnable(EXTI0);
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <MEXTI_voidEnable>
	MGI_voidEnable();
  ce:	0e 94 67 06 	call	0xcce	; 0xcce <MGI_voidEnable>
	MEXTI_voidConfig(EXTI1,FALLING_EDGE);
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	62 e0       	ldi	r22, 0x02	; 2
  d6:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <MEXTI_voidConfig>
	MEXTI_voidSetCallBack(EXTI1,FUNC_motor_ISR);
  da:	29 e4       	ldi	r18, 0x49	; 73
  dc:	30 e0       	ldi	r19, 0x00	; 0
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	b9 01       	movw	r22, r18
  e2:	0e 94 8e 05 	call	0xb1c	; 0xb1c <MEXTI_voidSetCallBack>
	MEXTI_voidEnable(EXTI1);
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <MEXTI_voidEnable>
  ec:	ff cf       	rjmp	.-2      	; 0xec <main+0x44>

000000ee <MDIO_voidSetPinDirection>:
#include "../Include/MCAL/DIO/DIO_Cfg.h"

//MDIO_voidSetPinDirection (DIO_PORTA, PIN5, DIO_OUTPUT);

void MDIO_voidSetPinDirection (DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_DIRECTION_e A_Direction)
{
  ee:	df 93       	push	r29
  f0:	cf 93       	push	r28
  f2:	cd b7       	in	r28, 0x3d	; 61
  f4:	de b7       	in	r29, 0x3e	; 62
  f6:	2d 97       	sbiw	r28, 0x0d	; 13
  f8:	0f b6       	in	r0, 0x3f	; 63
  fa:	f8 94       	cli
  fc:	de bf       	out	0x3e, r29	; 62
  fe:	0f be       	out	0x3f, r0	; 63
 100:	cd bf       	out	0x3d, r28	; 61
 102:	89 83       	std	Y+1, r24	; 0x01
 104:	6a 83       	std	Y+2, r22	; 0x02
 106:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_Direction <= DIO_OUTPUT) )
 108:	89 81       	ldd	r24, Y+1	; 0x01
 10a:	84 30       	cpi	r24, 0x04	; 4
 10c:	08 f0       	brcs	.+2      	; 0x110 <MDIO_voidSetPinDirection+0x22>
 10e:	09 c1       	rjmp	.+530    	; 0x322 <MDIO_voidSetPinDirection+0x234>
 110:	8a 81       	ldd	r24, Y+2	; 0x02
 112:	88 30       	cpi	r24, 0x08	; 8
 114:	08 f0       	brcs	.+2      	; 0x118 <MDIO_voidSetPinDirection+0x2a>
 116:	05 c1       	rjmp	.+522    	; 0x322 <MDIO_voidSetPinDirection+0x234>
 118:	8b 81       	ldd	r24, Y+3	; 0x03
 11a:	82 30       	cpi	r24, 0x02	; 2
 11c:	08 f0       	brcs	.+2      	; 0x120 <MDIO_voidSetPinDirection+0x32>
 11e:	01 c1       	rjmp	.+514    	; 0x322 <MDIO_voidSetPinDirection+0x234>
	{
		switch (A_portID)
 120:	89 81       	ldd	r24, Y+1	; 0x01
 122:	28 2f       	mov	r18, r24
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	3d 87       	std	Y+13, r19	; 0x0d
 128:	2c 87       	std	Y+12, r18	; 0x0c
 12a:	8c 85       	ldd	r24, Y+12	; 0x0c
 12c:	9d 85       	ldd	r25, Y+13	; 0x0d
 12e:	81 30       	cpi	r24, 0x01	; 1
 130:	91 05       	cpc	r25, r1
 132:	09 f4       	brne	.+2      	; 0x136 <MDIO_voidSetPinDirection+0x48>
 134:	4f c0       	rjmp	.+158    	; 0x1d4 <MDIO_voidSetPinDirection+0xe6>
 136:	2c 85       	ldd	r18, Y+12	; 0x0c
 138:	3d 85       	ldd	r19, Y+13	; 0x0d
 13a:	22 30       	cpi	r18, 0x02	; 2
 13c:	31 05       	cpc	r19, r1
 13e:	2c f4       	brge	.+10     	; 0x14a <MDIO_voidSetPinDirection+0x5c>
 140:	8c 85       	ldd	r24, Y+12	; 0x0c
 142:	9d 85       	ldd	r25, Y+13	; 0x0d
 144:	00 97       	sbiw	r24, 0x00	; 0
 146:	71 f0       	breq	.+28     	; 0x164 <MDIO_voidSetPinDirection+0x76>
 148:	ec c0       	rjmp	.+472    	; 0x322 <MDIO_voidSetPinDirection+0x234>
 14a:	2c 85       	ldd	r18, Y+12	; 0x0c
 14c:	3d 85       	ldd	r19, Y+13	; 0x0d
 14e:	22 30       	cpi	r18, 0x02	; 2
 150:	31 05       	cpc	r19, r1
 152:	09 f4       	brne	.+2      	; 0x156 <MDIO_voidSetPinDirection+0x68>
 154:	77 c0       	rjmp	.+238    	; 0x244 <MDIO_voidSetPinDirection+0x156>
 156:	8c 85       	ldd	r24, Y+12	; 0x0c
 158:	9d 85       	ldd	r25, Y+13	; 0x0d
 15a:	83 30       	cpi	r24, 0x03	; 3
 15c:	91 05       	cpc	r25, r1
 15e:	09 f4       	brne	.+2      	; 0x162 <MDIO_voidSetPinDirection+0x74>
 160:	a9 c0       	rjmp	.+338    	; 0x2b4 <MDIO_voidSetPinDirection+0x1c6>
 162:	df c0       	rjmp	.+446    	; 0x322 <MDIO_voidSetPinDirection+0x234>
		{
		case DIO_PORTA:
			switch (A_Direction)
 164:	8b 81       	ldd	r24, Y+3	; 0x03
 166:	28 2f       	mov	r18, r24
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	3b 87       	std	Y+11, r19	; 0x0b
 16c:	2a 87       	std	Y+10, r18	; 0x0a
 16e:	8a 85       	ldd	r24, Y+10	; 0x0a
 170:	9b 85       	ldd	r25, Y+11	; 0x0b
 172:	00 97       	sbiw	r24, 0x00	; 0
 174:	31 f0       	breq	.+12     	; 0x182 <MDIO_voidSetPinDirection+0x94>
 176:	2a 85       	ldd	r18, Y+10	; 0x0a
 178:	3b 85       	ldd	r19, Y+11	; 0x0b
 17a:	21 30       	cpi	r18, 0x01	; 1
 17c:	31 05       	cpc	r19, r1
 17e:	b1 f0       	breq	.+44     	; 0x1ac <MDIO_voidSetPinDirection+0xbe>
 180:	d0 c0       	rjmp	.+416    	; 0x322 <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRA_REG,A_pinID);
 182:	aa e3       	ldi	r26, 0x3A	; 58
 184:	b0 e0       	ldi	r27, 0x00	; 0
 186:	ea e3       	ldi	r30, 0x3A	; 58
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 81       	ld	r24, Z
 18c:	48 2f       	mov	r20, r24
 18e:	8a 81       	ldd	r24, Y+2	; 0x02
 190:	28 2f       	mov	r18, r24
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	02 2e       	mov	r0, r18
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <MDIO_voidSetPinDirection+0xb2>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	0a 94       	dec	r0
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <MDIO_voidSetPinDirection+0xae>
 1a4:	80 95       	com	r24
 1a6:	84 23       	and	r24, r20
 1a8:	8c 93       	st	X, r24
 1aa:	bb c0       	rjmp	.+374    	; 0x322 <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRA_REG,A_pinID);
 1ac:	aa e3       	ldi	r26, 0x3A	; 58
 1ae:	b0 e0       	ldi	r27, 0x00	; 0
 1b0:	ea e3       	ldi	r30, 0x3A	; 58
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	48 2f       	mov	r20, r24
 1b8:	8a 81       	ldd	r24, Y+2	; 0x02
 1ba:	28 2f       	mov	r18, r24
 1bc:	30 e0       	ldi	r19, 0x00	; 0
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	02 2e       	mov	r0, r18
 1c4:	02 c0       	rjmp	.+4      	; 0x1ca <MDIO_voidSetPinDirection+0xdc>
 1c6:	88 0f       	add	r24, r24
 1c8:	99 1f       	adc	r25, r25
 1ca:	0a 94       	dec	r0
 1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <MDIO_voidSetPinDirection+0xd8>
 1ce:	84 2b       	or	r24, r20
 1d0:	8c 93       	st	X, r24
 1d2:	a7 c0       	rjmp	.+334    	; 0x322 <MDIO_voidSetPinDirection+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_Direction)
 1d4:	8b 81       	ldd	r24, Y+3	; 0x03
 1d6:	28 2f       	mov	r18, r24
 1d8:	30 e0       	ldi	r19, 0x00	; 0
 1da:	39 87       	std	Y+9, r19	; 0x09
 1dc:	28 87       	std	Y+8, r18	; 0x08
 1de:	88 85       	ldd	r24, Y+8	; 0x08
 1e0:	99 85       	ldd	r25, Y+9	; 0x09
 1e2:	00 97       	sbiw	r24, 0x00	; 0
 1e4:	31 f0       	breq	.+12     	; 0x1f2 <MDIO_voidSetPinDirection+0x104>
 1e6:	28 85       	ldd	r18, Y+8	; 0x08
 1e8:	39 85       	ldd	r19, Y+9	; 0x09
 1ea:	21 30       	cpi	r18, 0x01	; 1
 1ec:	31 05       	cpc	r19, r1
 1ee:	b1 f0       	breq	.+44     	; 0x21c <MDIO_voidSetPinDirection+0x12e>
 1f0:	98 c0       	rjmp	.+304    	; 0x322 <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRB_REG,A_pinID);
 1f2:	a7 e3       	ldi	r26, 0x37	; 55
 1f4:	b0 e0       	ldi	r27, 0x00	; 0
 1f6:	e7 e3       	ldi	r30, 0x37	; 55
 1f8:	f0 e0       	ldi	r31, 0x00	; 0
 1fa:	80 81       	ld	r24, Z
 1fc:	48 2f       	mov	r20, r24
 1fe:	8a 81       	ldd	r24, Y+2	; 0x02
 200:	28 2f       	mov	r18, r24
 202:	30 e0       	ldi	r19, 0x00	; 0
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	02 2e       	mov	r0, r18
 20a:	02 c0       	rjmp	.+4      	; 0x210 <MDIO_voidSetPinDirection+0x122>
 20c:	88 0f       	add	r24, r24
 20e:	99 1f       	adc	r25, r25
 210:	0a 94       	dec	r0
 212:	e2 f7       	brpl	.-8      	; 0x20c <MDIO_voidSetPinDirection+0x11e>
 214:	80 95       	com	r24
 216:	84 23       	and	r24, r20
 218:	8c 93       	st	X, r24
 21a:	83 c0       	rjmp	.+262    	; 0x322 <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRB_REG,A_pinID);
 21c:	a7 e3       	ldi	r26, 0x37	; 55
 21e:	b0 e0       	ldi	r27, 0x00	; 0
 220:	e7 e3       	ldi	r30, 0x37	; 55
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	80 81       	ld	r24, Z
 226:	48 2f       	mov	r20, r24
 228:	8a 81       	ldd	r24, Y+2	; 0x02
 22a:	28 2f       	mov	r18, r24
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 2e       	mov	r0, r18
 234:	02 c0       	rjmp	.+4      	; 0x23a <MDIO_voidSetPinDirection+0x14c>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	0a 94       	dec	r0
 23c:	e2 f7       	brpl	.-8      	; 0x236 <MDIO_voidSetPinDirection+0x148>
 23e:	84 2b       	or	r24, r20
 240:	8c 93       	st	X, r24
 242:	6f c0       	rjmp	.+222    	; 0x322 <MDIO_voidSetPinDirection+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_Direction)
 244:	8b 81       	ldd	r24, Y+3	; 0x03
 246:	28 2f       	mov	r18, r24
 248:	30 e0       	ldi	r19, 0x00	; 0
 24a:	3f 83       	std	Y+7, r19	; 0x07
 24c:	2e 83       	std	Y+6, r18	; 0x06
 24e:	8e 81       	ldd	r24, Y+6	; 0x06
 250:	9f 81       	ldd	r25, Y+7	; 0x07
 252:	00 97       	sbiw	r24, 0x00	; 0
 254:	31 f0       	breq	.+12     	; 0x262 <MDIO_voidSetPinDirection+0x174>
 256:	2e 81       	ldd	r18, Y+6	; 0x06
 258:	3f 81       	ldd	r19, Y+7	; 0x07
 25a:	21 30       	cpi	r18, 0x01	; 1
 25c:	31 05       	cpc	r19, r1
 25e:	b1 f0       	breq	.+44     	; 0x28c <MDIO_voidSetPinDirection+0x19e>
 260:	60 c0       	rjmp	.+192    	; 0x322 <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRC_REG,A_pinID);
 262:	a4 e3       	ldi	r26, 0x34	; 52
 264:	b0 e0       	ldi	r27, 0x00	; 0
 266:	e4 e3       	ldi	r30, 0x34	; 52
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	80 81       	ld	r24, Z
 26c:	48 2f       	mov	r20, r24
 26e:	8a 81       	ldd	r24, Y+2	; 0x02
 270:	28 2f       	mov	r18, r24
 272:	30 e0       	ldi	r19, 0x00	; 0
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	02 2e       	mov	r0, r18
 27a:	02 c0       	rjmp	.+4      	; 0x280 <MDIO_voidSetPinDirection+0x192>
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	0a 94       	dec	r0
 282:	e2 f7       	brpl	.-8      	; 0x27c <MDIO_voidSetPinDirection+0x18e>
 284:	80 95       	com	r24
 286:	84 23       	and	r24, r20
 288:	8c 93       	st	X, r24
 28a:	4b c0       	rjmp	.+150    	; 0x322 <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRC_REG,A_pinID);
 28c:	a4 e3       	ldi	r26, 0x34	; 52
 28e:	b0 e0       	ldi	r27, 0x00	; 0
 290:	e4 e3       	ldi	r30, 0x34	; 52
 292:	f0 e0       	ldi	r31, 0x00	; 0
 294:	80 81       	ld	r24, Z
 296:	48 2f       	mov	r20, r24
 298:	8a 81       	ldd	r24, Y+2	; 0x02
 29a:	28 2f       	mov	r18, r24
 29c:	30 e0       	ldi	r19, 0x00	; 0
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	02 2e       	mov	r0, r18
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <MDIO_voidSetPinDirection+0x1bc>
 2a6:	88 0f       	add	r24, r24
 2a8:	99 1f       	adc	r25, r25
 2aa:	0a 94       	dec	r0
 2ac:	e2 f7       	brpl	.-8      	; 0x2a6 <MDIO_voidSetPinDirection+0x1b8>
 2ae:	84 2b       	or	r24, r20
 2b0:	8c 93       	st	X, r24
 2b2:	37 c0       	rjmp	.+110    	; 0x322 <MDIO_voidSetPinDirection+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_Direction)
 2b4:	8b 81       	ldd	r24, Y+3	; 0x03
 2b6:	28 2f       	mov	r18, r24
 2b8:	30 e0       	ldi	r19, 0x00	; 0
 2ba:	3d 83       	std	Y+5, r19	; 0x05
 2bc:	2c 83       	std	Y+4, r18	; 0x04
 2be:	8c 81       	ldd	r24, Y+4	; 0x04
 2c0:	9d 81       	ldd	r25, Y+5	; 0x05
 2c2:	00 97       	sbiw	r24, 0x00	; 0
 2c4:	31 f0       	breq	.+12     	; 0x2d2 <MDIO_voidSetPinDirection+0x1e4>
 2c6:	2c 81       	ldd	r18, Y+4	; 0x04
 2c8:	3d 81       	ldd	r19, Y+5	; 0x05
 2ca:	21 30       	cpi	r18, 0x01	; 1
 2cc:	31 05       	cpc	r19, r1
 2ce:	b1 f0       	breq	.+44     	; 0x2fc <MDIO_voidSetPinDirection+0x20e>
 2d0:	28 c0       	rjmp	.+80     	; 0x322 <MDIO_voidSetPinDirection+0x234>
			{
			case DIO_INPUT:
				CLR_BIT(DDRD_REG,A_pinID);
 2d2:	a1 e3       	ldi	r26, 0x31	; 49
 2d4:	b0 e0       	ldi	r27, 0x00	; 0
 2d6:	e1 e3       	ldi	r30, 0x31	; 49
 2d8:	f0 e0       	ldi	r31, 0x00	; 0
 2da:	80 81       	ld	r24, Z
 2dc:	48 2f       	mov	r20, r24
 2de:	8a 81       	ldd	r24, Y+2	; 0x02
 2e0:	28 2f       	mov	r18, r24
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	02 2e       	mov	r0, r18
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <MDIO_voidSetPinDirection+0x202>
 2ec:	88 0f       	add	r24, r24
 2ee:	99 1f       	adc	r25, r25
 2f0:	0a 94       	dec	r0
 2f2:	e2 f7       	brpl	.-8      	; 0x2ec <MDIO_voidSetPinDirection+0x1fe>
 2f4:	80 95       	com	r24
 2f6:	84 23       	and	r24, r20
 2f8:	8c 93       	st	X, r24
 2fa:	13 c0       	rjmp	.+38     	; 0x322 <MDIO_voidSetPinDirection+0x234>
				break;
			case DIO_OUTPUT:
				SET_BIT(DDRD_REG,A_pinID);
 2fc:	a1 e3       	ldi	r26, 0x31	; 49
 2fe:	b0 e0       	ldi	r27, 0x00	; 0
 300:	e1 e3       	ldi	r30, 0x31	; 49
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	80 81       	ld	r24, Z
 306:	48 2f       	mov	r20, r24
 308:	8a 81       	ldd	r24, Y+2	; 0x02
 30a:	28 2f       	mov	r18, r24
 30c:	30 e0       	ldi	r19, 0x00	; 0
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	02 2e       	mov	r0, r18
 314:	02 c0       	rjmp	.+4      	; 0x31a <MDIO_voidSetPinDirection+0x22c>
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	0a 94       	dec	r0
 31c:	e2 f7       	brpl	.-8      	; 0x316 <MDIO_voidSetPinDirection+0x228>
 31e:	84 2b       	or	r24, r20
 320:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
 322:	2d 96       	adiw	r28, 0x0d	; 13
 324:	0f b6       	in	r0, 0x3f	; 63
 326:	f8 94       	cli
 328:	de bf       	out	0x3e, r29	; 62
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	cd bf       	out	0x3d, r28	; 61
 32e:	cf 91       	pop	r28
 330:	df 91       	pop	r29
 332:	08 95       	ret

00000334 <MDIO_voidSetPinValue>:

void MDIO_voidSetPinValue (DIO_PORT_e A_portID, DIO_PIN_e A_pinID, DIO_VALUE_e A_Value)
{
 334:	df 93       	push	r29
 336:	cf 93       	push	r28
 338:	cd b7       	in	r28, 0x3d	; 61
 33a:	de b7       	in	r29, 0x3e	; 62
 33c:	2d 97       	sbiw	r28, 0x0d	; 13
 33e:	0f b6       	in	r0, 0x3f	; 63
 340:	f8 94       	cli
 342:	de bf       	out	0x3e, r29	; 62
 344:	0f be       	out	0x3f, r0	; 63
 346:	cd bf       	out	0x3d, r28	; 61
 348:	89 83       	std	Y+1, r24	; 0x01
 34a:	6a 83       	std	Y+2, r22	; 0x02
 34c:	4b 83       	std	Y+3, r20	; 0x03
	// Input Validation
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) && (A_Value <= DIO_SET) )
 34e:	89 81       	ldd	r24, Y+1	; 0x01
 350:	84 30       	cpi	r24, 0x04	; 4
 352:	08 f0       	brcs	.+2      	; 0x356 <MDIO_voidSetPinValue+0x22>
 354:	09 c1       	rjmp	.+530    	; 0x568 <MDIO_voidSetPinValue+0x234>
 356:	8a 81       	ldd	r24, Y+2	; 0x02
 358:	88 30       	cpi	r24, 0x08	; 8
 35a:	08 f0       	brcs	.+2      	; 0x35e <MDIO_voidSetPinValue+0x2a>
 35c:	05 c1       	rjmp	.+522    	; 0x568 <MDIO_voidSetPinValue+0x234>
 35e:	8b 81       	ldd	r24, Y+3	; 0x03
 360:	82 30       	cpi	r24, 0x02	; 2
 362:	08 f0       	brcs	.+2      	; 0x366 <MDIO_voidSetPinValue+0x32>
 364:	01 c1       	rjmp	.+514    	; 0x568 <MDIO_voidSetPinValue+0x234>
	{
		switch (A_portID)
 366:	89 81       	ldd	r24, Y+1	; 0x01
 368:	28 2f       	mov	r18, r24
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	3d 87       	std	Y+13, r19	; 0x0d
 36e:	2c 87       	std	Y+12, r18	; 0x0c
 370:	8c 85       	ldd	r24, Y+12	; 0x0c
 372:	9d 85       	ldd	r25, Y+13	; 0x0d
 374:	81 30       	cpi	r24, 0x01	; 1
 376:	91 05       	cpc	r25, r1
 378:	09 f4       	brne	.+2      	; 0x37c <MDIO_voidSetPinValue+0x48>
 37a:	4f c0       	rjmp	.+158    	; 0x41a <MDIO_voidSetPinValue+0xe6>
 37c:	2c 85       	ldd	r18, Y+12	; 0x0c
 37e:	3d 85       	ldd	r19, Y+13	; 0x0d
 380:	22 30       	cpi	r18, 0x02	; 2
 382:	31 05       	cpc	r19, r1
 384:	2c f4       	brge	.+10     	; 0x390 <MDIO_voidSetPinValue+0x5c>
 386:	8c 85       	ldd	r24, Y+12	; 0x0c
 388:	9d 85       	ldd	r25, Y+13	; 0x0d
 38a:	00 97       	sbiw	r24, 0x00	; 0
 38c:	71 f0       	breq	.+28     	; 0x3aa <MDIO_voidSetPinValue+0x76>
 38e:	ec c0       	rjmp	.+472    	; 0x568 <MDIO_voidSetPinValue+0x234>
 390:	2c 85       	ldd	r18, Y+12	; 0x0c
 392:	3d 85       	ldd	r19, Y+13	; 0x0d
 394:	22 30       	cpi	r18, 0x02	; 2
 396:	31 05       	cpc	r19, r1
 398:	09 f4       	brne	.+2      	; 0x39c <MDIO_voidSetPinValue+0x68>
 39a:	77 c0       	rjmp	.+238    	; 0x48a <MDIO_voidSetPinValue+0x156>
 39c:	8c 85       	ldd	r24, Y+12	; 0x0c
 39e:	9d 85       	ldd	r25, Y+13	; 0x0d
 3a0:	83 30       	cpi	r24, 0x03	; 3
 3a2:	91 05       	cpc	r25, r1
 3a4:	09 f4       	brne	.+2      	; 0x3a8 <MDIO_voidSetPinValue+0x74>
 3a6:	a9 c0       	rjmp	.+338    	; 0x4fa <MDIO_voidSetPinValue+0x1c6>
 3a8:	df c0       	rjmp	.+446    	; 0x568 <MDIO_voidSetPinValue+0x234>
		{
		case DIO_PORTA:
			switch (A_Value)
 3aa:	8b 81       	ldd	r24, Y+3	; 0x03
 3ac:	28 2f       	mov	r18, r24
 3ae:	30 e0       	ldi	r19, 0x00	; 0
 3b0:	3b 87       	std	Y+11, r19	; 0x0b
 3b2:	2a 87       	std	Y+10, r18	; 0x0a
 3b4:	8a 85       	ldd	r24, Y+10	; 0x0a
 3b6:	9b 85       	ldd	r25, Y+11	; 0x0b
 3b8:	00 97       	sbiw	r24, 0x00	; 0
 3ba:	31 f0       	breq	.+12     	; 0x3c8 <MDIO_voidSetPinValue+0x94>
 3bc:	2a 85       	ldd	r18, Y+10	; 0x0a
 3be:	3b 85       	ldd	r19, Y+11	; 0x0b
 3c0:	21 30       	cpi	r18, 0x01	; 1
 3c2:	31 05       	cpc	r19, r1
 3c4:	b1 f0       	breq	.+44     	; 0x3f2 <MDIO_voidSetPinValue+0xbe>
 3c6:	d0 c0       	rjmp	.+416    	; 0x568 <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTA_REG,A_pinID);
 3c8:	ab e3       	ldi	r26, 0x3B	; 59
 3ca:	b0 e0       	ldi	r27, 0x00	; 0
 3cc:	eb e3       	ldi	r30, 0x3B	; 59
 3ce:	f0 e0       	ldi	r31, 0x00	; 0
 3d0:	80 81       	ld	r24, Z
 3d2:	48 2f       	mov	r20, r24
 3d4:	8a 81       	ldd	r24, Y+2	; 0x02
 3d6:	28 2f       	mov	r18, r24
 3d8:	30 e0       	ldi	r19, 0x00	; 0
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	02 2e       	mov	r0, r18
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <MDIO_voidSetPinValue+0xb2>
 3e2:	88 0f       	add	r24, r24
 3e4:	99 1f       	adc	r25, r25
 3e6:	0a 94       	dec	r0
 3e8:	e2 f7       	brpl	.-8      	; 0x3e2 <MDIO_voidSetPinValue+0xae>
 3ea:	80 95       	com	r24
 3ec:	84 23       	and	r24, r20
 3ee:	8c 93       	st	X, r24
 3f0:	bb c0       	rjmp	.+374    	; 0x568 <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTA_REG,A_pinID);
 3f2:	ab e3       	ldi	r26, 0x3B	; 59
 3f4:	b0 e0       	ldi	r27, 0x00	; 0
 3f6:	eb e3       	ldi	r30, 0x3B	; 59
 3f8:	f0 e0       	ldi	r31, 0x00	; 0
 3fa:	80 81       	ld	r24, Z
 3fc:	48 2f       	mov	r20, r24
 3fe:	8a 81       	ldd	r24, Y+2	; 0x02
 400:	28 2f       	mov	r18, r24
 402:	30 e0       	ldi	r19, 0x00	; 0
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	02 2e       	mov	r0, r18
 40a:	02 c0       	rjmp	.+4      	; 0x410 <MDIO_voidSetPinValue+0xdc>
 40c:	88 0f       	add	r24, r24
 40e:	99 1f       	adc	r25, r25
 410:	0a 94       	dec	r0
 412:	e2 f7       	brpl	.-8      	; 0x40c <MDIO_voidSetPinValue+0xd8>
 414:	84 2b       	or	r24, r20
 416:	8c 93       	st	X, r24
 418:	a7 c0       	rjmp	.+334    	; 0x568 <MDIO_voidSetPinValue+0x234>
				break;
			}
			break;
		case DIO_PORTB:
			switch (A_Value)
 41a:	8b 81       	ldd	r24, Y+3	; 0x03
 41c:	28 2f       	mov	r18, r24
 41e:	30 e0       	ldi	r19, 0x00	; 0
 420:	39 87       	std	Y+9, r19	; 0x09
 422:	28 87       	std	Y+8, r18	; 0x08
 424:	88 85       	ldd	r24, Y+8	; 0x08
 426:	99 85       	ldd	r25, Y+9	; 0x09
 428:	00 97       	sbiw	r24, 0x00	; 0
 42a:	31 f0       	breq	.+12     	; 0x438 <MDIO_voidSetPinValue+0x104>
 42c:	28 85       	ldd	r18, Y+8	; 0x08
 42e:	39 85       	ldd	r19, Y+9	; 0x09
 430:	21 30       	cpi	r18, 0x01	; 1
 432:	31 05       	cpc	r19, r1
 434:	b1 f0       	breq	.+44     	; 0x462 <MDIO_voidSetPinValue+0x12e>
 436:	98 c0       	rjmp	.+304    	; 0x568 <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTB_REG,A_pinID);
 438:	a8 e3       	ldi	r26, 0x38	; 56
 43a:	b0 e0       	ldi	r27, 0x00	; 0
 43c:	e8 e3       	ldi	r30, 0x38	; 56
 43e:	f0 e0       	ldi	r31, 0x00	; 0
 440:	80 81       	ld	r24, Z
 442:	48 2f       	mov	r20, r24
 444:	8a 81       	ldd	r24, Y+2	; 0x02
 446:	28 2f       	mov	r18, r24
 448:	30 e0       	ldi	r19, 0x00	; 0
 44a:	81 e0       	ldi	r24, 0x01	; 1
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	02 2e       	mov	r0, r18
 450:	02 c0       	rjmp	.+4      	; 0x456 <MDIO_voidSetPinValue+0x122>
 452:	88 0f       	add	r24, r24
 454:	99 1f       	adc	r25, r25
 456:	0a 94       	dec	r0
 458:	e2 f7       	brpl	.-8      	; 0x452 <MDIO_voidSetPinValue+0x11e>
 45a:	80 95       	com	r24
 45c:	84 23       	and	r24, r20
 45e:	8c 93       	st	X, r24
 460:	83 c0       	rjmp	.+262    	; 0x568 <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTB_REG,A_pinID);
 462:	a8 e3       	ldi	r26, 0x38	; 56
 464:	b0 e0       	ldi	r27, 0x00	; 0
 466:	e8 e3       	ldi	r30, 0x38	; 56
 468:	f0 e0       	ldi	r31, 0x00	; 0
 46a:	80 81       	ld	r24, Z
 46c:	48 2f       	mov	r20, r24
 46e:	8a 81       	ldd	r24, Y+2	; 0x02
 470:	28 2f       	mov	r18, r24
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	81 e0       	ldi	r24, 0x01	; 1
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	02 2e       	mov	r0, r18
 47a:	02 c0       	rjmp	.+4      	; 0x480 <MDIO_voidSetPinValue+0x14c>
 47c:	88 0f       	add	r24, r24
 47e:	99 1f       	adc	r25, r25
 480:	0a 94       	dec	r0
 482:	e2 f7       	brpl	.-8      	; 0x47c <MDIO_voidSetPinValue+0x148>
 484:	84 2b       	or	r24, r20
 486:	8c 93       	st	X, r24
 488:	6f c0       	rjmp	.+222    	; 0x568 <MDIO_voidSetPinValue+0x234>
				break;
			}
			break;
		case DIO_PORTC:
			switch (A_Value)
 48a:	8b 81       	ldd	r24, Y+3	; 0x03
 48c:	28 2f       	mov	r18, r24
 48e:	30 e0       	ldi	r19, 0x00	; 0
 490:	3f 83       	std	Y+7, r19	; 0x07
 492:	2e 83       	std	Y+6, r18	; 0x06
 494:	8e 81       	ldd	r24, Y+6	; 0x06
 496:	9f 81       	ldd	r25, Y+7	; 0x07
 498:	00 97       	sbiw	r24, 0x00	; 0
 49a:	31 f0       	breq	.+12     	; 0x4a8 <MDIO_voidSetPinValue+0x174>
 49c:	2e 81       	ldd	r18, Y+6	; 0x06
 49e:	3f 81       	ldd	r19, Y+7	; 0x07
 4a0:	21 30       	cpi	r18, 0x01	; 1
 4a2:	31 05       	cpc	r19, r1
 4a4:	b1 f0       	breq	.+44     	; 0x4d2 <MDIO_voidSetPinValue+0x19e>
 4a6:	60 c0       	rjmp	.+192    	; 0x568 <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTC_REG,A_pinID);
 4a8:	a5 e3       	ldi	r26, 0x35	; 53
 4aa:	b0 e0       	ldi	r27, 0x00	; 0
 4ac:	e5 e3       	ldi	r30, 0x35	; 53
 4ae:	f0 e0       	ldi	r31, 0x00	; 0
 4b0:	80 81       	ld	r24, Z
 4b2:	48 2f       	mov	r20, r24
 4b4:	8a 81       	ldd	r24, Y+2	; 0x02
 4b6:	28 2f       	mov	r18, r24
 4b8:	30 e0       	ldi	r19, 0x00	; 0
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	02 2e       	mov	r0, r18
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <MDIO_voidSetPinValue+0x192>
 4c2:	88 0f       	add	r24, r24
 4c4:	99 1f       	adc	r25, r25
 4c6:	0a 94       	dec	r0
 4c8:	e2 f7       	brpl	.-8      	; 0x4c2 <MDIO_voidSetPinValue+0x18e>
 4ca:	80 95       	com	r24
 4cc:	84 23       	and	r24, r20
 4ce:	8c 93       	st	X, r24
 4d0:	4b c0       	rjmp	.+150    	; 0x568 <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTC_REG,A_pinID);
 4d2:	a5 e3       	ldi	r26, 0x35	; 53
 4d4:	b0 e0       	ldi	r27, 0x00	; 0
 4d6:	e5 e3       	ldi	r30, 0x35	; 53
 4d8:	f0 e0       	ldi	r31, 0x00	; 0
 4da:	80 81       	ld	r24, Z
 4dc:	48 2f       	mov	r20, r24
 4de:	8a 81       	ldd	r24, Y+2	; 0x02
 4e0:	28 2f       	mov	r18, r24
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	81 e0       	ldi	r24, 0x01	; 1
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	02 2e       	mov	r0, r18
 4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <MDIO_voidSetPinValue+0x1bc>
 4ec:	88 0f       	add	r24, r24
 4ee:	99 1f       	adc	r25, r25
 4f0:	0a 94       	dec	r0
 4f2:	e2 f7       	brpl	.-8      	; 0x4ec <MDIO_voidSetPinValue+0x1b8>
 4f4:	84 2b       	or	r24, r20
 4f6:	8c 93       	st	X, r24
 4f8:	37 c0       	rjmp	.+110    	; 0x568 <MDIO_voidSetPinValue+0x234>
				break;
			}
			break;
		case DIO_PORTD:
			switch (A_Value)
 4fa:	8b 81       	ldd	r24, Y+3	; 0x03
 4fc:	28 2f       	mov	r18, r24
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	3d 83       	std	Y+5, r19	; 0x05
 502:	2c 83       	std	Y+4, r18	; 0x04
 504:	8c 81       	ldd	r24, Y+4	; 0x04
 506:	9d 81       	ldd	r25, Y+5	; 0x05
 508:	00 97       	sbiw	r24, 0x00	; 0
 50a:	31 f0       	breq	.+12     	; 0x518 <MDIO_voidSetPinValue+0x1e4>
 50c:	2c 81       	ldd	r18, Y+4	; 0x04
 50e:	3d 81       	ldd	r19, Y+5	; 0x05
 510:	21 30       	cpi	r18, 0x01	; 1
 512:	31 05       	cpc	r19, r1
 514:	b1 f0       	breq	.+44     	; 0x542 <MDIO_voidSetPinValue+0x20e>
 516:	28 c0       	rjmp	.+80     	; 0x568 <MDIO_voidSetPinValue+0x234>
			{
			case DIO_RESET:
				CLR_BIT(PORTD_REG,A_pinID);
 518:	a2 e3       	ldi	r26, 0x32	; 50
 51a:	b0 e0       	ldi	r27, 0x00	; 0
 51c:	e2 e3       	ldi	r30, 0x32	; 50
 51e:	f0 e0       	ldi	r31, 0x00	; 0
 520:	80 81       	ld	r24, Z
 522:	48 2f       	mov	r20, r24
 524:	8a 81       	ldd	r24, Y+2	; 0x02
 526:	28 2f       	mov	r18, r24
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	02 2e       	mov	r0, r18
 530:	02 c0       	rjmp	.+4      	; 0x536 <MDIO_voidSetPinValue+0x202>
 532:	88 0f       	add	r24, r24
 534:	99 1f       	adc	r25, r25
 536:	0a 94       	dec	r0
 538:	e2 f7       	brpl	.-8      	; 0x532 <MDIO_voidSetPinValue+0x1fe>
 53a:	80 95       	com	r24
 53c:	84 23       	and	r24, r20
 53e:	8c 93       	st	X, r24
 540:	13 c0       	rjmp	.+38     	; 0x568 <MDIO_voidSetPinValue+0x234>
				break;
			case DIO_SET:
				SET_BIT(PORTD_REG,A_pinID);
 542:	a2 e3       	ldi	r26, 0x32	; 50
 544:	b0 e0       	ldi	r27, 0x00	; 0
 546:	e2 e3       	ldi	r30, 0x32	; 50
 548:	f0 e0       	ldi	r31, 0x00	; 0
 54a:	80 81       	ld	r24, Z
 54c:	48 2f       	mov	r20, r24
 54e:	8a 81       	ldd	r24, Y+2	; 0x02
 550:	28 2f       	mov	r18, r24
 552:	30 e0       	ldi	r19, 0x00	; 0
 554:	81 e0       	ldi	r24, 0x01	; 1
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	02 2e       	mov	r0, r18
 55a:	02 c0       	rjmp	.+4      	; 0x560 <MDIO_voidSetPinValue+0x22c>
 55c:	88 0f       	add	r24, r24
 55e:	99 1f       	adc	r25, r25
 560:	0a 94       	dec	r0
 562:	e2 f7       	brpl	.-8      	; 0x55c <MDIO_voidSetPinValue+0x228>
 564:	84 2b       	or	r24, r20
 566:	8c 93       	st	X, r24
	}
	else
	{
		// Do Nothing
	}
}
 568:	2d 96       	adiw	r28, 0x0d	; 13
 56a:	0f b6       	in	r0, 0x3f	; 63
 56c:	f8 94       	cli
 56e:	de bf       	out	0x3e, r29	; 62
 570:	0f be       	out	0x3f, r0	; 63
 572:	cd bf       	out	0x3d, r28	; 61
 574:	cf 91       	pop	r28
 576:	df 91       	pop	r29
 578:	08 95       	ret

0000057a <MDIO_GetPinValue>:


DIO_VALUE_e MDIO_GetPinValue (DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
 57a:	df 93       	push	r29
 57c:	cf 93       	push	r28
 57e:	00 d0       	rcall	.+0      	; 0x580 <MDIO_GetPinValue+0x6>
 580:	00 d0       	rcall	.+0      	; 0x582 <MDIO_GetPinValue+0x8>
 582:	0f 92       	push	r0
 584:	cd b7       	in	r28, 0x3d	; 61
 586:	de b7       	in	r29, 0x3e	; 62
 588:	8a 83       	std	Y+2, r24	; 0x02
 58a:	6b 83       	std	Y+3, r22	; 0x03
	DIO_VALUE_e local_Value;
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
 58c:	8a 81       	ldd	r24, Y+2	; 0x02
 58e:	84 30       	cpi	r24, 0x04	; 4
 590:	08 f0       	brcs	.+2      	; 0x594 <MDIO_GetPinValue+0x1a>
 592:	6b c0       	rjmp	.+214    	; 0x66a <MDIO_GetPinValue+0xf0>
 594:	8b 81       	ldd	r24, Y+3	; 0x03
 596:	88 30       	cpi	r24, 0x08	; 8
 598:	08 f0       	brcs	.+2      	; 0x59c <MDIO_GetPinValue+0x22>
 59a:	67 c0       	rjmp	.+206    	; 0x66a <MDIO_GetPinValue+0xf0>
	{
		switch (A_portID)
 59c:	8a 81       	ldd	r24, Y+2	; 0x02
 59e:	28 2f       	mov	r18, r24
 5a0:	30 e0       	ldi	r19, 0x00	; 0
 5a2:	3d 83       	std	Y+5, r19	; 0x05
 5a4:	2c 83       	std	Y+4, r18	; 0x04
 5a6:	4c 81       	ldd	r20, Y+4	; 0x04
 5a8:	5d 81       	ldd	r21, Y+5	; 0x05
 5aa:	41 30       	cpi	r20, 0x01	; 1
 5ac:	51 05       	cpc	r21, r1
 5ae:	41 f1       	breq	.+80     	; 0x600 <MDIO_GetPinValue+0x86>
 5b0:	8c 81       	ldd	r24, Y+4	; 0x04
 5b2:	9d 81       	ldd	r25, Y+5	; 0x05
 5b4:	82 30       	cpi	r24, 0x02	; 2
 5b6:	91 05       	cpc	r25, r1
 5b8:	34 f4       	brge	.+12     	; 0x5c6 <MDIO_GetPinValue+0x4c>
 5ba:	2c 81       	ldd	r18, Y+4	; 0x04
 5bc:	3d 81       	ldd	r19, Y+5	; 0x05
 5be:	21 15       	cp	r18, r1
 5c0:	31 05       	cpc	r19, r1
 5c2:	61 f0       	breq	.+24     	; 0x5dc <MDIO_GetPinValue+0x62>
 5c4:	52 c0       	rjmp	.+164    	; 0x66a <MDIO_GetPinValue+0xf0>
 5c6:	4c 81       	ldd	r20, Y+4	; 0x04
 5c8:	5d 81       	ldd	r21, Y+5	; 0x05
 5ca:	42 30       	cpi	r20, 0x02	; 2
 5cc:	51 05       	cpc	r21, r1
 5ce:	51 f1       	breq	.+84     	; 0x624 <MDIO_GetPinValue+0xaa>
 5d0:	8c 81       	ldd	r24, Y+4	; 0x04
 5d2:	9d 81       	ldd	r25, Y+5	; 0x05
 5d4:	83 30       	cpi	r24, 0x03	; 3
 5d6:	91 05       	cpc	r25, r1
 5d8:	b9 f1       	breq	.+110    	; 0x648 <MDIO_GetPinValue+0xce>
 5da:	47 c0       	rjmp	.+142    	; 0x66a <MDIO_GetPinValue+0xf0>
		{
		case DIO_PORTA:
			local_Value = GET_BIT(PINA_REG,A_pinID);
 5dc:	e9 e3       	ldi	r30, 0x39	; 57
 5de:	f0 e0       	ldi	r31, 0x00	; 0
 5e0:	80 81       	ld	r24, Z
 5e2:	28 2f       	mov	r18, r24
 5e4:	30 e0       	ldi	r19, 0x00	; 0
 5e6:	8b 81       	ldd	r24, Y+3	; 0x03
 5e8:	88 2f       	mov	r24, r24
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	a9 01       	movw	r20, r18
 5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <MDIO_GetPinValue+0x7a>
 5f0:	55 95       	asr	r21
 5f2:	47 95       	ror	r20
 5f4:	8a 95       	dec	r24
 5f6:	e2 f7       	brpl	.-8      	; 0x5f0 <MDIO_GetPinValue+0x76>
 5f8:	ca 01       	movw	r24, r20
 5fa:	81 70       	andi	r24, 0x01	; 1
 5fc:	89 83       	std	Y+1, r24	; 0x01
 5fe:	35 c0       	rjmp	.+106    	; 0x66a <MDIO_GetPinValue+0xf0>
			break;
		case DIO_PORTB:
			local_Value = GET_BIT(PINB_REG,A_pinID);
 600:	e6 e3       	ldi	r30, 0x36	; 54
 602:	f0 e0       	ldi	r31, 0x00	; 0
 604:	80 81       	ld	r24, Z
 606:	28 2f       	mov	r18, r24
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	8b 81       	ldd	r24, Y+3	; 0x03
 60c:	88 2f       	mov	r24, r24
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	a9 01       	movw	r20, r18
 612:	02 c0       	rjmp	.+4      	; 0x618 <MDIO_GetPinValue+0x9e>
 614:	55 95       	asr	r21
 616:	47 95       	ror	r20
 618:	8a 95       	dec	r24
 61a:	e2 f7       	brpl	.-8      	; 0x614 <MDIO_GetPinValue+0x9a>
 61c:	ca 01       	movw	r24, r20
 61e:	81 70       	andi	r24, 0x01	; 1
 620:	89 83       	std	Y+1, r24	; 0x01
 622:	23 c0       	rjmp	.+70     	; 0x66a <MDIO_GetPinValue+0xf0>
			break;
		case DIO_PORTC:
			local_Value = GET_BIT(PINC_REG,A_pinID);
 624:	e3 e3       	ldi	r30, 0x33	; 51
 626:	f0 e0       	ldi	r31, 0x00	; 0
 628:	80 81       	ld	r24, Z
 62a:	28 2f       	mov	r18, r24
 62c:	30 e0       	ldi	r19, 0x00	; 0
 62e:	8b 81       	ldd	r24, Y+3	; 0x03
 630:	88 2f       	mov	r24, r24
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	a9 01       	movw	r20, r18
 636:	02 c0       	rjmp	.+4      	; 0x63c <MDIO_GetPinValue+0xc2>
 638:	55 95       	asr	r21
 63a:	47 95       	ror	r20
 63c:	8a 95       	dec	r24
 63e:	e2 f7       	brpl	.-8      	; 0x638 <MDIO_GetPinValue+0xbe>
 640:	ca 01       	movw	r24, r20
 642:	81 70       	andi	r24, 0x01	; 1
 644:	89 83       	std	Y+1, r24	; 0x01
 646:	11 c0       	rjmp	.+34     	; 0x66a <MDIO_GetPinValue+0xf0>
			break;
		case DIO_PORTD:
			local_Value = GET_BIT(PIND_REG,A_pinID);
 648:	e0 e3       	ldi	r30, 0x30	; 48
 64a:	f0 e0       	ldi	r31, 0x00	; 0
 64c:	80 81       	ld	r24, Z
 64e:	28 2f       	mov	r18, r24
 650:	30 e0       	ldi	r19, 0x00	; 0
 652:	8b 81       	ldd	r24, Y+3	; 0x03
 654:	88 2f       	mov	r24, r24
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	a9 01       	movw	r20, r18
 65a:	02 c0       	rjmp	.+4      	; 0x660 <MDIO_GetPinValue+0xe6>
 65c:	55 95       	asr	r21
 65e:	47 95       	ror	r20
 660:	8a 95       	dec	r24
 662:	e2 f7       	brpl	.-8      	; 0x65c <MDIO_GetPinValue+0xe2>
 664:	ca 01       	movw	r24, r20
 666:	81 70       	andi	r24, 0x01	; 1
 668:	89 83       	std	Y+1, r24	; 0x01
			break;
		}
	}
	return local_Value;
 66a:	89 81       	ldd	r24, Y+1	; 0x01
}
 66c:	0f 90       	pop	r0
 66e:	0f 90       	pop	r0
 670:	0f 90       	pop	r0
 672:	0f 90       	pop	r0
 674:	0f 90       	pop	r0
 676:	cf 91       	pop	r28
 678:	df 91       	pop	r29
 67a:	08 95       	ret

0000067c <MDIO_voidTogglePinValue>:

void MDIO_voidTogglePinValue (DIO_PORT_e A_portID, DIO_PIN_e A_pinID)
{
 67c:	df 93       	push	r29
 67e:	cf 93       	push	r28
 680:	00 d0       	rcall	.+0      	; 0x682 <MDIO_voidTogglePinValue+0x6>
 682:	00 d0       	rcall	.+0      	; 0x684 <MDIO_voidTogglePinValue+0x8>
 684:	cd b7       	in	r28, 0x3d	; 61
 686:	de b7       	in	r29, 0x3e	; 62
 688:	89 83       	std	Y+1, r24	; 0x01
 68a:	6a 83       	std	Y+2, r22	; 0x02
	if ( (A_portID <= DIO_PORTD) && (A_pinID <= PIN7) )
 68c:	89 81       	ldd	r24, Y+1	; 0x01
 68e:	84 30       	cpi	r24, 0x04	; 4
 690:	08 f0       	brcs	.+2      	; 0x694 <MDIO_voidTogglePinValue+0x18>
 692:	72 c0       	rjmp	.+228    	; 0x778 <MDIO_voidTogglePinValue+0xfc>
 694:	8a 81       	ldd	r24, Y+2	; 0x02
 696:	88 30       	cpi	r24, 0x08	; 8
 698:	08 f0       	brcs	.+2      	; 0x69c <MDIO_voidTogglePinValue+0x20>
 69a:	6e c0       	rjmp	.+220    	; 0x778 <MDIO_voidTogglePinValue+0xfc>
	{
		switch (A_portID)
 69c:	89 81       	ldd	r24, Y+1	; 0x01
 69e:	28 2f       	mov	r18, r24
 6a0:	30 e0       	ldi	r19, 0x00	; 0
 6a2:	3c 83       	std	Y+4, r19	; 0x04
 6a4:	2b 83       	std	Y+3, r18	; 0x03
 6a6:	8b 81       	ldd	r24, Y+3	; 0x03
 6a8:	9c 81       	ldd	r25, Y+4	; 0x04
 6aa:	81 30       	cpi	r24, 0x01	; 1
 6ac:	91 05       	cpc	r25, r1
 6ae:	49 f1       	breq	.+82     	; 0x702 <MDIO_voidTogglePinValue+0x86>
 6b0:	2b 81       	ldd	r18, Y+3	; 0x03
 6b2:	3c 81       	ldd	r19, Y+4	; 0x04
 6b4:	22 30       	cpi	r18, 0x02	; 2
 6b6:	31 05       	cpc	r19, r1
 6b8:	2c f4       	brge	.+10     	; 0x6c4 <MDIO_voidTogglePinValue+0x48>
 6ba:	8b 81       	ldd	r24, Y+3	; 0x03
 6bc:	9c 81       	ldd	r25, Y+4	; 0x04
 6be:	00 97       	sbiw	r24, 0x00	; 0
 6c0:	61 f0       	breq	.+24     	; 0x6da <MDIO_voidTogglePinValue+0x5e>
 6c2:	5a c0       	rjmp	.+180    	; 0x778 <MDIO_voidTogglePinValue+0xfc>
 6c4:	2b 81       	ldd	r18, Y+3	; 0x03
 6c6:	3c 81       	ldd	r19, Y+4	; 0x04
 6c8:	22 30       	cpi	r18, 0x02	; 2
 6ca:	31 05       	cpc	r19, r1
 6cc:	71 f1       	breq	.+92     	; 0x72a <MDIO_voidTogglePinValue+0xae>
 6ce:	8b 81       	ldd	r24, Y+3	; 0x03
 6d0:	9c 81       	ldd	r25, Y+4	; 0x04
 6d2:	83 30       	cpi	r24, 0x03	; 3
 6d4:	91 05       	cpc	r25, r1
 6d6:	e9 f1       	breq	.+122    	; 0x752 <MDIO_voidTogglePinValue+0xd6>
 6d8:	4f c0       	rjmp	.+158    	; 0x778 <MDIO_voidTogglePinValue+0xfc>
		{
		case DIO_PORTA:
			TOGGLE_BIT(PORTA_REG,A_pinID);
 6da:	ab e3       	ldi	r26, 0x3B	; 59
 6dc:	b0 e0       	ldi	r27, 0x00	; 0
 6de:	eb e3       	ldi	r30, 0x3B	; 59
 6e0:	f0 e0       	ldi	r31, 0x00	; 0
 6e2:	80 81       	ld	r24, Z
 6e4:	48 2f       	mov	r20, r24
 6e6:	8a 81       	ldd	r24, Y+2	; 0x02
 6e8:	28 2f       	mov	r18, r24
 6ea:	30 e0       	ldi	r19, 0x00	; 0
 6ec:	81 e0       	ldi	r24, 0x01	; 1
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	02 2e       	mov	r0, r18
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <MDIO_voidTogglePinValue+0x7c>
 6f4:	88 0f       	add	r24, r24
 6f6:	99 1f       	adc	r25, r25
 6f8:	0a 94       	dec	r0
 6fa:	e2 f7       	brpl	.-8      	; 0x6f4 <MDIO_voidTogglePinValue+0x78>
 6fc:	84 27       	eor	r24, r20
 6fe:	8c 93       	st	X, r24
 700:	3b c0       	rjmp	.+118    	; 0x778 <MDIO_voidTogglePinValue+0xfc>
			break;
		case DIO_PORTB:
			TOGGLE_BIT(PORTB_REG,A_pinID);
 702:	a8 e3       	ldi	r26, 0x38	; 56
 704:	b0 e0       	ldi	r27, 0x00	; 0
 706:	e8 e3       	ldi	r30, 0x38	; 56
 708:	f0 e0       	ldi	r31, 0x00	; 0
 70a:	80 81       	ld	r24, Z
 70c:	48 2f       	mov	r20, r24
 70e:	8a 81       	ldd	r24, Y+2	; 0x02
 710:	28 2f       	mov	r18, r24
 712:	30 e0       	ldi	r19, 0x00	; 0
 714:	81 e0       	ldi	r24, 0x01	; 1
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	02 2e       	mov	r0, r18
 71a:	02 c0       	rjmp	.+4      	; 0x720 <MDIO_voidTogglePinValue+0xa4>
 71c:	88 0f       	add	r24, r24
 71e:	99 1f       	adc	r25, r25
 720:	0a 94       	dec	r0
 722:	e2 f7       	brpl	.-8      	; 0x71c <MDIO_voidTogglePinValue+0xa0>
 724:	84 27       	eor	r24, r20
 726:	8c 93       	st	X, r24
 728:	27 c0       	rjmp	.+78     	; 0x778 <MDIO_voidTogglePinValue+0xfc>
			break;
		case DIO_PORTC:
			TOGGLE_BIT(PORTC_REG,A_pinID);
 72a:	a5 e3       	ldi	r26, 0x35	; 53
 72c:	b0 e0       	ldi	r27, 0x00	; 0
 72e:	e5 e3       	ldi	r30, 0x35	; 53
 730:	f0 e0       	ldi	r31, 0x00	; 0
 732:	80 81       	ld	r24, Z
 734:	48 2f       	mov	r20, r24
 736:	8a 81       	ldd	r24, Y+2	; 0x02
 738:	28 2f       	mov	r18, r24
 73a:	30 e0       	ldi	r19, 0x00	; 0
 73c:	81 e0       	ldi	r24, 0x01	; 1
 73e:	90 e0       	ldi	r25, 0x00	; 0
 740:	02 2e       	mov	r0, r18
 742:	02 c0       	rjmp	.+4      	; 0x748 <MDIO_voidTogglePinValue+0xcc>
 744:	88 0f       	add	r24, r24
 746:	99 1f       	adc	r25, r25
 748:	0a 94       	dec	r0
 74a:	e2 f7       	brpl	.-8      	; 0x744 <MDIO_voidTogglePinValue+0xc8>
 74c:	84 27       	eor	r24, r20
 74e:	8c 93       	st	X, r24
 750:	13 c0       	rjmp	.+38     	; 0x778 <MDIO_voidTogglePinValue+0xfc>
			break;
		case DIO_PORTD:
			TOGGLE_BIT(PORTD_REG,A_pinID);
 752:	a2 e3       	ldi	r26, 0x32	; 50
 754:	b0 e0       	ldi	r27, 0x00	; 0
 756:	e2 e3       	ldi	r30, 0x32	; 50
 758:	f0 e0       	ldi	r31, 0x00	; 0
 75a:	80 81       	ld	r24, Z
 75c:	48 2f       	mov	r20, r24
 75e:	8a 81       	ldd	r24, Y+2	; 0x02
 760:	28 2f       	mov	r18, r24
 762:	30 e0       	ldi	r19, 0x00	; 0
 764:	81 e0       	ldi	r24, 0x01	; 1
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	02 2e       	mov	r0, r18
 76a:	02 c0       	rjmp	.+4      	; 0x770 <MDIO_voidTogglePinValue+0xf4>
 76c:	88 0f       	add	r24, r24
 76e:	99 1f       	adc	r25, r25
 770:	0a 94       	dec	r0
 772:	e2 f7       	brpl	.-8      	; 0x76c <MDIO_voidTogglePinValue+0xf0>
 774:	84 27       	eor	r24, r20
 776:	8c 93       	st	X, r24
			break;
		}
	}
}
 778:	0f 90       	pop	r0
 77a:	0f 90       	pop	r0
 77c:	0f 90       	pop	r0
 77e:	0f 90       	pop	r0
 780:	cf 91       	pop	r28
 782:	df 91       	pop	r29
 784:	08 95       	ret

00000786 <MDIO_voidSetPortDirection>:


void MDIO_voidSetPortDirection (DIO_PORT_e A_portID, u8 A_u8Direction)
{
 786:	df 93       	push	r29
 788:	cf 93       	push	r28
 78a:	00 d0       	rcall	.+0      	; 0x78c <MDIO_voidSetPortDirection+0x6>
 78c:	00 d0       	rcall	.+0      	; 0x78e <MDIO_voidSetPortDirection+0x8>
 78e:	cd b7       	in	r28, 0x3d	; 61
 790:	de b7       	in	r29, 0x3e	; 62
 792:	89 83       	std	Y+1, r24	; 0x01
 794:	6a 83       	std	Y+2, r22	; 0x02
	if ( (A_portID <= DIO_PORTD) )
 796:	89 81       	ldd	r24, Y+1	; 0x01
 798:	84 30       	cpi	r24, 0x04	; 4
 79a:	90 f5       	brcc	.+100    	; 0x800 <MDIO_voidSetPortDirection+0x7a>
	{
		switch (A_portID)
 79c:	89 81       	ldd	r24, Y+1	; 0x01
 79e:	28 2f       	mov	r18, r24
 7a0:	30 e0       	ldi	r19, 0x00	; 0
 7a2:	3c 83       	std	Y+4, r19	; 0x04
 7a4:	2b 83       	std	Y+3, r18	; 0x03
 7a6:	8b 81       	ldd	r24, Y+3	; 0x03
 7a8:	9c 81       	ldd	r25, Y+4	; 0x04
 7aa:	81 30       	cpi	r24, 0x01	; 1
 7ac:	91 05       	cpc	r25, r1
 7ae:	d1 f0       	breq	.+52     	; 0x7e4 <MDIO_voidSetPortDirection+0x5e>
 7b0:	2b 81       	ldd	r18, Y+3	; 0x03
 7b2:	3c 81       	ldd	r19, Y+4	; 0x04
 7b4:	22 30       	cpi	r18, 0x02	; 2
 7b6:	31 05       	cpc	r19, r1
 7b8:	2c f4       	brge	.+10     	; 0x7c4 <MDIO_voidSetPortDirection+0x3e>
 7ba:	8b 81       	ldd	r24, Y+3	; 0x03
 7bc:	9c 81       	ldd	r25, Y+4	; 0x04
 7be:	00 97       	sbiw	r24, 0x00	; 0
 7c0:	61 f0       	breq	.+24     	; 0x7da <MDIO_voidSetPortDirection+0x54>
 7c2:	1e c0       	rjmp	.+60     	; 0x800 <MDIO_voidSetPortDirection+0x7a>
 7c4:	2b 81       	ldd	r18, Y+3	; 0x03
 7c6:	3c 81       	ldd	r19, Y+4	; 0x04
 7c8:	22 30       	cpi	r18, 0x02	; 2
 7ca:	31 05       	cpc	r19, r1
 7cc:	81 f0       	breq	.+32     	; 0x7ee <MDIO_voidSetPortDirection+0x68>
 7ce:	8b 81       	ldd	r24, Y+3	; 0x03
 7d0:	9c 81       	ldd	r25, Y+4	; 0x04
 7d2:	83 30       	cpi	r24, 0x03	; 3
 7d4:	91 05       	cpc	r25, r1
 7d6:	81 f0       	breq	.+32     	; 0x7f8 <MDIO_voidSetPortDirection+0x72>
 7d8:	13 c0       	rjmp	.+38     	; 0x800 <MDIO_voidSetPortDirection+0x7a>
		{
		case DIO_PORTA:
			DDRA_REG = A_u8Direction;
 7da:	ea e3       	ldi	r30, 0x3A	; 58
 7dc:	f0 e0       	ldi	r31, 0x00	; 0
 7de:	8a 81       	ldd	r24, Y+2	; 0x02
 7e0:	80 83       	st	Z, r24
 7e2:	0e c0       	rjmp	.+28     	; 0x800 <MDIO_voidSetPortDirection+0x7a>
			break;
		case DIO_PORTB:
			DDRB_REG = A_u8Direction;
 7e4:	e7 e3       	ldi	r30, 0x37	; 55
 7e6:	f0 e0       	ldi	r31, 0x00	; 0
 7e8:	8a 81       	ldd	r24, Y+2	; 0x02
 7ea:	80 83       	st	Z, r24
 7ec:	09 c0       	rjmp	.+18     	; 0x800 <MDIO_voidSetPortDirection+0x7a>
			break;
		case DIO_PORTC:
			DDRC_REG = A_u8Direction;
 7ee:	e4 e3       	ldi	r30, 0x34	; 52
 7f0:	f0 e0       	ldi	r31, 0x00	; 0
 7f2:	8a 81       	ldd	r24, Y+2	; 0x02
 7f4:	80 83       	st	Z, r24
 7f6:	04 c0       	rjmp	.+8      	; 0x800 <MDIO_voidSetPortDirection+0x7a>
			break;
		case DIO_PORTD:
			DDRD_REG = A_u8Direction;
 7f8:	e1 e3       	ldi	r30, 0x31	; 49
 7fa:	f0 e0       	ldi	r31, 0x00	; 0
 7fc:	8a 81       	ldd	r24, Y+2	; 0x02
 7fe:	80 83       	st	Z, r24
			break;
		}
	}
}
 800:	0f 90       	pop	r0
 802:	0f 90       	pop	r0
 804:	0f 90       	pop	r0
 806:	0f 90       	pop	r0
 808:	cf 91       	pop	r28
 80a:	df 91       	pop	r29
 80c:	08 95       	ret

0000080e <MDIO_voidSetPortValue>:

void MDIO_voidSetPortValue (DIO_PORT_e A_portID, u8 A_u8Value)
{
 80e:	df 93       	push	r29
 810:	cf 93       	push	r28
 812:	00 d0       	rcall	.+0      	; 0x814 <MDIO_voidSetPortValue+0x6>
 814:	00 d0       	rcall	.+0      	; 0x816 <MDIO_voidSetPortValue+0x8>
 816:	cd b7       	in	r28, 0x3d	; 61
 818:	de b7       	in	r29, 0x3e	; 62
 81a:	89 83       	std	Y+1, r24	; 0x01
 81c:	6a 83       	std	Y+2, r22	; 0x02
	if ( (A_portID <= DIO_PORTD) )
 81e:	89 81       	ldd	r24, Y+1	; 0x01
 820:	84 30       	cpi	r24, 0x04	; 4
 822:	90 f5       	brcc	.+100    	; 0x888 <__stack+0x29>
	{
		switch (A_portID)
 824:	89 81       	ldd	r24, Y+1	; 0x01
 826:	28 2f       	mov	r18, r24
 828:	30 e0       	ldi	r19, 0x00	; 0
 82a:	3c 83       	std	Y+4, r19	; 0x04
 82c:	2b 83       	std	Y+3, r18	; 0x03
 82e:	8b 81       	ldd	r24, Y+3	; 0x03
 830:	9c 81       	ldd	r25, Y+4	; 0x04
 832:	81 30       	cpi	r24, 0x01	; 1
 834:	91 05       	cpc	r25, r1
 836:	d1 f0       	breq	.+52     	; 0x86c <__stack+0xd>
 838:	2b 81       	ldd	r18, Y+3	; 0x03
 83a:	3c 81       	ldd	r19, Y+4	; 0x04
 83c:	22 30       	cpi	r18, 0x02	; 2
 83e:	31 05       	cpc	r19, r1
 840:	2c f4       	brge	.+10     	; 0x84c <MDIO_voidSetPortValue+0x3e>
 842:	8b 81       	ldd	r24, Y+3	; 0x03
 844:	9c 81       	ldd	r25, Y+4	; 0x04
 846:	00 97       	sbiw	r24, 0x00	; 0
 848:	61 f0       	breq	.+24     	; 0x862 <__stack+0x3>
 84a:	1e c0       	rjmp	.+60     	; 0x888 <__stack+0x29>
 84c:	2b 81       	ldd	r18, Y+3	; 0x03
 84e:	3c 81       	ldd	r19, Y+4	; 0x04
 850:	22 30       	cpi	r18, 0x02	; 2
 852:	31 05       	cpc	r19, r1
 854:	81 f0       	breq	.+32     	; 0x876 <__stack+0x17>
 856:	8b 81       	ldd	r24, Y+3	; 0x03
 858:	9c 81       	ldd	r25, Y+4	; 0x04
 85a:	83 30       	cpi	r24, 0x03	; 3
 85c:	91 05       	cpc	r25, r1
 85e:	81 f0       	breq	.+32     	; 0x880 <__stack+0x21>
 860:	13 c0       	rjmp	.+38     	; 0x888 <__stack+0x29>
		{
		case DIO_PORTA:
			PORTA_REG = A_u8Value;
 862:	eb e3       	ldi	r30, 0x3B	; 59
 864:	f0 e0       	ldi	r31, 0x00	; 0
 866:	8a 81       	ldd	r24, Y+2	; 0x02
 868:	80 83       	st	Z, r24
 86a:	0e c0       	rjmp	.+28     	; 0x888 <__stack+0x29>
			break;
		case DIO_PORTB:
			PORTB_REG = A_u8Value;
 86c:	e8 e3       	ldi	r30, 0x38	; 56
 86e:	f0 e0       	ldi	r31, 0x00	; 0
 870:	8a 81       	ldd	r24, Y+2	; 0x02
 872:	80 83       	st	Z, r24
 874:	09 c0       	rjmp	.+18     	; 0x888 <__stack+0x29>
			break;
		case DIO_PORTC:
			PORTC_REG = A_u8Value;
 876:	e5 e3       	ldi	r30, 0x35	; 53
 878:	f0 e0       	ldi	r31, 0x00	; 0
 87a:	8a 81       	ldd	r24, Y+2	; 0x02
 87c:	80 83       	st	Z, r24
 87e:	04 c0       	rjmp	.+8      	; 0x888 <__stack+0x29>
			break;
		case DIO_PORTD:
			PORTD_REG = A_u8Value;
 880:	e2 e3       	ldi	r30, 0x32	; 50
 882:	f0 e0       	ldi	r31, 0x00	; 0
 884:	8a 81       	ldd	r24, Y+2	; 0x02
 886:	80 83       	st	Z, r24
			break;
		}
	}
}
 888:	0f 90       	pop	r0
 88a:	0f 90       	pop	r0
 88c:	0f 90       	pop	r0
 88e:	0f 90       	pop	r0
 890:	cf 91       	pop	r28
 892:	df 91       	pop	r29
 894:	08 95       	ret

00000896 <MDIO_voidInit>:


void MDIO_voidInit()
{
 896:	df 93       	push	r29
 898:	cf 93       	push	r28
 89a:	cd b7       	in	r28, 0x3d	; 61
 89c:	de b7       	in	r29, 0x3e	; 62
	DDRA_REG = CONC_BIT(PA7_INITIAL_DIRECTION,PA6_INITIAL_DIRECTION,
 89e:	ea e3       	ldi	r30, 0x3A	; 58
 8a0:	f0 e0       	ldi	r31, 0x00	; 0
 8a2:	83 e0       	ldi	r24, 0x03	; 3
 8a4:	80 83       	st	Z, r24
						PA5_INITIAL_DIRECTION,PA4_INITIAL_DIRECTION,
						PA3_INITIAL_DIRECTION,PA2_INITIAL_DIRECTION,
						PA1_INITIAL_DIRECTION,PA0_INITIAL_DIRECTION);

	DDRB_REG = CONC_BIT(PB7_INITIAL_DIRECTION,PB6_INITIAL_DIRECTION,
 8a6:	e7 e3       	ldi	r30, 0x37	; 55
 8a8:	f0 e0       	ldi	r31, 0x00	; 0
 8aa:	10 82       	st	Z, r1
						PB5_INITIAL_DIRECTION,PB4_INITIAL_DIRECTION,
						PB3_INITIAL_DIRECTION,PB2_INITIAL_DIRECTION,
						PB1_INITIAL_DIRECTION,PB0_INITIAL_DIRECTION);

	DDRC_REG = CONC_BIT(PC7_INITIAL_DIRECTION,PC6_INITIAL_DIRECTION,
 8ac:	e4 e3       	ldi	r30, 0x34	; 52
 8ae:	f0 e0       	ldi	r31, 0x00	; 0
 8b0:	10 82       	st	Z, r1
						PC5_INITIAL_DIRECTION,PC4_INITIAL_DIRECTION,
						PC3_INITIAL_DIRECTION,PC2_INITIAL_DIRECTION,
						PC1_INITIAL_DIRECTION,PC0_INITIAL_DIRECTION);

	DDRD_REG = CONC_BIT(PD7_INITIAL_DIRECTION,PD6_INITIAL_DIRECTION,
 8b2:	e1 e3       	ldi	r30, 0x31	; 49
 8b4:	f0 e0       	ldi	r31, 0x00	; 0
 8b6:	10 82       	st	Z, r1
						PD5_INITIAL_DIRECTION,PD4_INITIAL_DIRECTION,
						PD3_INITIAL_DIRECTION,PD2_INITIAL_DIRECTION,
						PD1_INITIAL_DIRECTION,PD0_INITIAL_DIRECTION);

	PORTA_REG = CONC_BIT(PA7_INITIAL_VALUE,PA6_INITIAL_VALUE,
 8b8:	eb e3       	ldi	r30, 0x3B	; 59
 8ba:	f0 e0       	ldi	r31, 0x00	; 0
 8bc:	10 82       	st	Z, r1
						 PA5_INITIAL_VALUE,PA4_INITIAL_VALUE,
						 PA3_INITIAL_VALUE,PA2_INITIAL_VALUE,
						 PA1_INITIAL_VALUE,PA0_INITIAL_VALUE);

	PORTB_REG = CONC_BIT(PB7_INITIAL_VALUE,PB6_INITIAL_VALUE,
 8be:	e8 e3       	ldi	r30, 0x38	; 56
 8c0:	f0 e0       	ldi	r31, 0x00	; 0
 8c2:	10 82       	st	Z, r1
						 PB5_INITIAL_VALUE,PB4_INITIAL_VALUE,
						 PB3_INITIAL_VALUE,PB2_INITIAL_VALUE,
						 PB1_INITIAL_VALUE,PB0_INITIAL_VALUE);

	PORTC_REG = CONC_BIT(PC7_INITIAL_VALUE,PC6_INITIAL_VALUE,
 8c4:	e5 e3       	ldi	r30, 0x35	; 53
 8c6:	f0 e0       	ldi	r31, 0x00	; 0
 8c8:	10 82       	st	Z, r1
						 PC5_INITIAL_VALUE,PC4_INITIAL_VALUE,
						 PC3_INITIAL_VALUE,PC2_INITIAL_VALUE,
						 PC1_INITIAL_VALUE,PC0_INITIAL_VALUE);

	PORTD_REG = CONC_BIT(PD7_INITIAL_VALUE,PD6_INITIAL_VALUE,
 8ca:	e2 e3       	ldi	r30, 0x32	; 50
 8cc:	f0 e0       	ldi	r31, 0x00	; 0
 8ce:	8c e0       	ldi	r24, 0x0C	; 12
 8d0:	80 83       	st	Z, r24
						 PD5_INITIAL_VALUE,PD4_INITIAL_VALUE,
						 PD3_INITIAL_VALUE,PD2_INITIAL_VALUE,
						 PD1_INITIAL_VALUE,PD0_INITIAL_VALUE);
}
 8d2:	cf 91       	pop	r28
 8d4:	df 91       	pop	r29
 8d6:	08 95       	ret

000008d8 <MEXTI_voidConfig>:
void (*EXTI0_Callback) (void) = NULL;
void (*EXTI1_Callback) (void) = NULL;
void (*EXTI2_Callback) (void) = NULL;

void MEXTI_voidConfig (EXTI_ID A_EXTI_ID, EXTI_SENSE_MODE A_EXTISenseMode)
{
 8d8:	df 93       	push	r29
 8da:	cf 93       	push	r28
 8dc:	00 d0       	rcall	.+0      	; 0x8de <MEXTI_voidConfig+0x6>
 8de:	00 d0       	rcall	.+0      	; 0x8e0 <MEXTI_voidConfig+0x8>
 8e0:	00 d0       	rcall	.+0      	; 0x8e2 <MEXTI_voidConfig+0xa>
 8e2:	cd b7       	in	r28, 0x3d	; 61
 8e4:	de b7       	in	r29, 0x3e	; 62
 8e6:	89 83       	std	Y+1, r24	; 0x01
 8e8:	6a 83       	std	Y+2, r22	; 0x02
	// Input Validation
	if((A_EXTI_ID <= EXTI2) && (A_EXTISenseMode <= RISING_EDGE))
 8ea:	89 81       	ldd	r24, Y+1	; 0x01
 8ec:	83 30       	cpi	r24, 0x03	; 3
 8ee:	08 f0       	brcs	.+2      	; 0x8f2 <MEXTI_voidConfig+0x1a>
 8f0:	5e c0       	rjmp	.+188    	; 0x9ae <MEXTI_voidConfig+0xd6>
 8f2:	8a 81       	ldd	r24, Y+2	; 0x02
 8f4:	84 30       	cpi	r24, 0x04	; 4
 8f6:	08 f0       	brcs	.+2      	; 0x8fa <MEXTI_voidConfig+0x22>
 8f8:	5a c0       	rjmp	.+180    	; 0x9ae <MEXTI_voidConfig+0xd6>
	{
		switch (A_EXTI_ID)
 8fa:	89 81       	ldd	r24, Y+1	; 0x01
 8fc:	28 2f       	mov	r18, r24
 8fe:	30 e0       	ldi	r19, 0x00	; 0
 900:	3e 83       	std	Y+6, r19	; 0x06
 902:	2d 83       	std	Y+5, r18	; 0x05
 904:	8d 81       	ldd	r24, Y+5	; 0x05
 906:	9e 81       	ldd	r25, Y+6	; 0x06
 908:	81 30       	cpi	r24, 0x01	; 1
 90a:	91 05       	cpc	r25, r1
 90c:	d1 f0       	breq	.+52     	; 0x942 <MEXTI_voidConfig+0x6a>
 90e:	2d 81       	ldd	r18, Y+5	; 0x05
 910:	3e 81       	ldd	r19, Y+6	; 0x06
 912:	22 30       	cpi	r18, 0x02	; 2
 914:	31 05       	cpc	r19, r1
 916:	61 f1       	breq	.+88     	; 0x970 <MEXTI_voidConfig+0x98>
 918:	8d 81       	ldd	r24, Y+5	; 0x05
 91a:	9e 81       	ldd	r25, Y+6	; 0x06
 91c:	00 97       	sbiw	r24, 0x00	; 0
 91e:	09 f0       	breq	.+2      	; 0x922 <MEXTI_voidConfig+0x4a>
 920:	46 c0       	rjmp	.+140    	; 0x9ae <MEXTI_voidConfig+0xd6>
		{
		case EXTI0:
			MCUCR &= ~(SENSE_MODE_MASK << EXTI0_SENSE_MODE_BITS);
 922:	a5 e5       	ldi	r26, 0x55	; 85
 924:	b0 e0       	ldi	r27, 0x00	; 0
 926:	e5 e5       	ldi	r30, 0x55	; 85
 928:	f0 e0       	ldi	r31, 0x00	; 0
 92a:	80 81       	ld	r24, Z
 92c:	8c 7f       	andi	r24, 0xFC	; 252
 92e:	8c 93       	st	X, r24
			MCUCR |=  (A_EXTISenseMode << EXTI0_SENSE_MODE_BITS);
 930:	a5 e5       	ldi	r26, 0x55	; 85
 932:	b0 e0       	ldi	r27, 0x00	; 0
 934:	e5 e5       	ldi	r30, 0x55	; 85
 936:	f0 e0       	ldi	r31, 0x00	; 0
 938:	90 81       	ld	r25, Z
 93a:	8a 81       	ldd	r24, Y+2	; 0x02
 93c:	89 2b       	or	r24, r25
 93e:	8c 93       	st	X, r24
 940:	36 c0       	rjmp	.+108    	; 0x9ae <MEXTI_voidConfig+0xd6>
			break;
		case EXTI1:
			MCUCR &= ~(SENSE_MODE_MASK << EXTI1_SENSE_MODE_BITS);
 942:	a5 e5       	ldi	r26, 0x55	; 85
 944:	b0 e0       	ldi	r27, 0x00	; 0
 946:	e5 e5       	ldi	r30, 0x55	; 85
 948:	f0 e0       	ldi	r31, 0x00	; 0
 94a:	80 81       	ld	r24, Z
 94c:	83 7f       	andi	r24, 0xF3	; 243
 94e:	8c 93       	st	X, r24
			MCUCR |=  (A_EXTISenseMode << EXTI1_SENSE_MODE_BITS);
 950:	a5 e5       	ldi	r26, 0x55	; 85
 952:	b0 e0       	ldi	r27, 0x00	; 0
 954:	e5 e5       	ldi	r30, 0x55	; 85
 956:	f0 e0       	ldi	r31, 0x00	; 0
 958:	80 81       	ld	r24, Z
 95a:	28 2f       	mov	r18, r24
 95c:	8a 81       	ldd	r24, Y+2	; 0x02
 95e:	88 2f       	mov	r24, r24
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	88 0f       	add	r24, r24
 964:	99 1f       	adc	r25, r25
 966:	88 0f       	add	r24, r24
 968:	99 1f       	adc	r25, r25
 96a:	82 2b       	or	r24, r18
 96c:	8c 93       	st	X, r24
 96e:	1f c0       	rjmp	.+62     	; 0x9ae <MEXTI_voidConfig+0xd6>
			break;
		case EXTI2:
			switch (A_EXTISenseMode)
 970:	8a 81       	ldd	r24, Y+2	; 0x02
 972:	28 2f       	mov	r18, r24
 974:	30 e0       	ldi	r19, 0x00	; 0
 976:	3c 83       	std	Y+4, r19	; 0x04
 978:	2b 83       	std	Y+3, r18	; 0x03
 97a:	8b 81       	ldd	r24, Y+3	; 0x03
 97c:	9c 81       	ldd	r25, Y+4	; 0x04
 97e:	82 30       	cpi	r24, 0x02	; 2
 980:	91 05       	cpc	r25, r1
 982:	31 f0       	breq	.+12     	; 0x990 <MEXTI_voidConfig+0xb8>
 984:	2b 81       	ldd	r18, Y+3	; 0x03
 986:	3c 81       	ldd	r19, Y+4	; 0x04
 988:	23 30       	cpi	r18, 0x03	; 3
 98a:	31 05       	cpc	r19, r1
 98c:	49 f0       	breq	.+18     	; 0x9a0 <MEXTI_voidConfig+0xc8>
 98e:	0f c0       	rjmp	.+30     	; 0x9ae <MEXTI_voidConfig+0xd6>
			{
			case FALLING_EDGE:
				CLR_BIT(MCUCSR,EXTI2_SENSE_MODE_BITS);
 990:	a4 e5       	ldi	r26, 0x54	; 84
 992:	b0 e0       	ldi	r27, 0x00	; 0
 994:	e4 e5       	ldi	r30, 0x54	; 84
 996:	f0 e0       	ldi	r31, 0x00	; 0
 998:	80 81       	ld	r24, Z
 99a:	8f 7b       	andi	r24, 0xBF	; 191
 99c:	8c 93       	st	X, r24
 99e:	07 c0       	rjmp	.+14     	; 0x9ae <MEXTI_voidConfig+0xd6>
				break;
			case RISING_EDGE:
				SET_BIT(MCUCSR,EXTI2_SENSE_MODE_BITS);
 9a0:	a4 e5       	ldi	r26, 0x54	; 84
 9a2:	b0 e0       	ldi	r27, 0x00	; 0
 9a4:	e4 e5       	ldi	r30, 0x54	; 84
 9a6:	f0 e0       	ldi	r31, 0x00	; 0
 9a8:	80 81       	ld	r24, Z
 9aa:	80 64       	ori	r24, 0x40	; 64
 9ac:	8c 93       	st	X, r24
			}
			break;
		default:break;
		}
	}
}
 9ae:	26 96       	adiw	r28, 0x06	; 6
 9b0:	0f b6       	in	r0, 0x3f	; 63
 9b2:	f8 94       	cli
 9b4:	de bf       	out	0x3e, r29	; 62
 9b6:	0f be       	out	0x3f, r0	; 63
 9b8:	cd bf       	out	0x3d, r28	; 61
 9ba:	cf 91       	pop	r28
 9bc:	df 91       	pop	r29
 9be:	08 95       	ret

000009c0 <MEXTI_voidEnable>:


void MEXTI_voidEnable (EXTI_ID A_EXTI_ID)
{
 9c0:	df 93       	push	r29
 9c2:	cf 93       	push	r28
 9c4:	00 d0       	rcall	.+0      	; 0x9c6 <MEXTI_voidEnable+0x6>
 9c6:	0f 92       	push	r0
 9c8:	cd b7       	in	r28, 0x3d	; 61
 9ca:	de b7       	in	r29, 0x3e	; 62
 9cc:	89 83       	std	Y+1, r24	; 0x01
	if((A_EXTI_ID <= EXTI2))
 9ce:	89 81       	ldd	r24, Y+1	; 0x01
 9d0:	83 30       	cpi	r24, 0x03	; 3
 9d2:	50 f5       	brcc	.+84     	; 0xa28 <MEXTI_voidEnable+0x68>
	{
		switch (A_EXTI_ID)
 9d4:	89 81       	ldd	r24, Y+1	; 0x01
 9d6:	28 2f       	mov	r18, r24
 9d8:	30 e0       	ldi	r19, 0x00	; 0
 9da:	3b 83       	std	Y+3, r19	; 0x03
 9dc:	2a 83       	std	Y+2, r18	; 0x02
 9de:	8a 81       	ldd	r24, Y+2	; 0x02
 9e0:	9b 81       	ldd	r25, Y+3	; 0x03
 9e2:	81 30       	cpi	r24, 0x01	; 1
 9e4:	91 05       	cpc	r25, r1
 9e6:	89 f0       	breq	.+34     	; 0xa0a <MEXTI_voidEnable+0x4a>
 9e8:	2a 81       	ldd	r18, Y+2	; 0x02
 9ea:	3b 81       	ldd	r19, Y+3	; 0x03
 9ec:	22 30       	cpi	r18, 0x02	; 2
 9ee:	31 05       	cpc	r19, r1
 9f0:	a1 f0       	breq	.+40     	; 0xa1a <MEXTI_voidEnable+0x5a>
 9f2:	8a 81       	ldd	r24, Y+2	; 0x02
 9f4:	9b 81       	ldd	r25, Y+3	; 0x03
 9f6:	00 97       	sbiw	r24, 0x00	; 0
 9f8:	b9 f4       	brne	.+46     	; 0xa28 <MEXTI_voidEnable+0x68>
		{
		case EXTI0:
			SET_BIT(GICR,EXTI0_ENABLE_BIT);
 9fa:	ab e5       	ldi	r26, 0x5B	; 91
 9fc:	b0 e0       	ldi	r27, 0x00	; 0
 9fe:	eb e5       	ldi	r30, 0x5B	; 91
 a00:	f0 e0       	ldi	r31, 0x00	; 0
 a02:	80 81       	ld	r24, Z
 a04:	80 64       	ori	r24, 0x40	; 64
 a06:	8c 93       	st	X, r24
 a08:	0f c0       	rjmp	.+30     	; 0xa28 <MEXTI_voidEnable+0x68>
			break;
		case EXTI1:
			SET_BIT(GICR,EXTI1_ENABLE_BIT);
 a0a:	ab e5       	ldi	r26, 0x5B	; 91
 a0c:	b0 e0       	ldi	r27, 0x00	; 0
 a0e:	eb e5       	ldi	r30, 0x5B	; 91
 a10:	f0 e0       	ldi	r31, 0x00	; 0
 a12:	80 81       	ld	r24, Z
 a14:	80 68       	ori	r24, 0x80	; 128
 a16:	8c 93       	st	X, r24
 a18:	07 c0       	rjmp	.+14     	; 0xa28 <MEXTI_voidEnable+0x68>
			break;
		case EXTI2:
			SET_BIT(GICR,EXTI2_ENABLE_BIT);
 a1a:	ab e5       	ldi	r26, 0x5B	; 91
 a1c:	b0 e0       	ldi	r27, 0x00	; 0
 a1e:	eb e5       	ldi	r30, 0x5B	; 91
 a20:	f0 e0       	ldi	r31, 0x00	; 0
 a22:	80 81       	ld	r24, Z
 a24:	80 62       	ori	r24, 0x20	; 32
 a26:	8c 93       	st	X, r24
			break;
		}
	}
}
 a28:	0f 90       	pop	r0
 a2a:	0f 90       	pop	r0
 a2c:	0f 90       	pop	r0
 a2e:	cf 91       	pop	r28
 a30:	df 91       	pop	r29
 a32:	08 95       	ret

00000a34 <MEXTI_voidDisable>:
void MEXTI_voidDisable (EXTI_ID A_EXTI_ID)
{
 a34:	df 93       	push	r29
 a36:	cf 93       	push	r28
 a38:	00 d0       	rcall	.+0      	; 0xa3a <MEXTI_voidDisable+0x6>
 a3a:	0f 92       	push	r0
 a3c:	cd b7       	in	r28, 0x3d	; 61
 a3e:	de b7       	in	r29, 0x3e	; 62
 a40:	89 83       	std	Y+1, r24	; 0x01
	if((A_EXTI_ID <= EXTI2))
 a42:	89 81       	ldd	r24, Y+1	; 0x01
 a44:	83 30       	cpi	r24, 0x03	; 3
 a46:	50 f5       	brcc	.+84     	; 0xa9c <MEXTI_voidDisable+0x68>
	{
		switch (A_EXTI_ID)
 a48:	89 81       	ldd	r24, Y+1	; 0x01
 a4a:	28 2f       	mov	r18, r24
 a4c:	30 e0       	ldi	r19, 0x00	; 0
 a4e:	3b 83       	std	Y+3, r19	; 0x03
 a50:	2a 83       	std	Y+2, r18	; 0x02
 a52:	8a 81       	ldd	r24, Y+2	; 0x02
 a54:	9b 81       	ldd	r25, Y+3	; 0x03
 a56:	81 30       	cpi	r24, 0x01	; 1
 a58:	91 05       	cpc	r25, r1
 a5a:	89 f0       	breq	.+34     	; 0xa7e <MEXTI_voidDisable+0x4a>
 a5c:	2a 81       	ldd	r18, Y+2	; 0x02
 a5e:	3b 81       	ldd	r19, Y+3	; 0x03
 a60:	22 30       	cpi	r18, 0x02	; 2
 a62:	31 05       	cpc	r19, r1
 a64:	a1 f0       	breq	.+40     	; 0xa8e <MEXTI_voidDisable+0x5a>
 a66:	8a 81       	ldd	r24, Y+2	; 0x02
 a68:	9b 81       	ldd	r25, Y+3	; 0x03
 a6a:	00 97       	sbiw	r24, 0x00	; 0
 a6c:	b9 f4       	brne	.+46     	; 0xa9c <MEXTI_voidDisable+0x68>
		{
		case EXTI0:
			CLR_BIT(GICR,EXTI0_ENABLE_BIT);
 a6e:	ab e5       	ldi	r26, 0x5B	; 91
 a70:	b0 e0       	ldi	r27, 0x00	; 0
 a72:	eb e5       	ldi	r30, 0x5B	; 91
 a74:	f0 e0       	ldi	r31, 0x00	; 0
 a76:	80 81       	ld	r24, Z
 a78:	8f 7b       	andi	r24, 0xBF	; 191
 a7a:	8c 93       	st	X, r24
 a7c:	0f c0       	rjmp	.+30     	; 0xa9c <MEXTI_voidDisable+0x68>
			break;
		case EXTI1:
			CLR_BIT(GICR,EXTI1_ENABLE_BIT);
 a7e:	ab e5       	ldi	r26, 0x5B	; 91
 a80:	b0 e0       	ldi	r27, 0x00	; 0
 a82:	eb e5       	ldi	r30, 0x5B	; 91
 a84:	f0 e0       	ldi	r31, 0x00	; 0
 a86:	80 81       	ld	r24, Z
 a88:	8f 77       	andi	r24, 0x7F	; 127
 a8a:	8c 93       	st	X, r24
 a8c:	07 c0       	rjmp	.+14     	; 0xa9c <MEXTI_voidDisable+0x68>
			break;
		case EXTI2:
			CLR_BIT(GICR,EXTI2_ENABLE_BIT);
 a8e:	ab e5       	ldi	r26, 0x5B	; 91
 a90:	b0 e0       	ldi	r27, 0x00	; 0
 a92:	eb e5       	ldi	r30, 0x5B	; 91
 a94:	f0 e0       	ldi	r31, 0x00	; 0
 a96:	80 81       	ld	r24, Z
 a98:	8f 7d       	andi	r24, 0xDF	; 223
 a9a:	8c 93       	st	X, r24
			break;
		}
	}
}
 a9c:	0f 90       	pop	r0
 a9e:	0f 90       	pop	r0
 aa0:	0f 90       	pop	r0
 aa2:	cf 91       	pop	r28
 aa4:	df 91       	pop	r29
 aa6:	08 95       	ret

00000aa8 <MEXTI_voidClearFlag>:

void MEXTI_voidClearFlag (EXTI_ID A_EXTI_ID)
{
 aa8:	df 93       	push	r29
 aaa:	cf 93       	push	r28
 aac:	00 d0       	rcall	.+0      	; 0xaae <MEXTI_voidClearFlag+0x6>
 aae:	0f 92       	push	r0
 ab0:	cd b7       	in	r28, 0x3d	; 61
 ab2:	de b7       	in	r29, 0x3e	; 62
 ab4:	89 83       	std	Y+1, r24	; 0x01
	if((A_EXTI_ID <= EXTI2))
 ab6:	89 81       	ldd	r24, Y+1	; 0x01
 ab8:	83 30       	cpi	r24, 0x03	; 3
 aba:	50 f5       	brcc	.+84     	; 0xb10 <MEXTI_voidClearFlag+0x68>
	{
		switch (A_EXTI_ID)
 abc:	89 81       	ldd	r24, Y+1	; 0x01
 abe:	28 2f       	mov	r18, r24
 ac0:	30 e0       	ldi	r19, 0x00	; 0
 ac2:	3b 83       	std	Y+3, r19	; 0x03
 ac4:	2a 83       	std	Y+2, r18	; 0x02
 ac6:	8a 81       	ldd	r24, Y+2	; 0x02
 ac8:	9b 81       	ldd	r25, Y+3	; 0x03
 aca:	81 30       	cpi	r24, 0x01	; 1
 acc:	91 05       	cpc	r25, r1
 ace:	89 f0       	breq	.+34     	; 0xaf2 <MEXTI_voidClearFlag+0x4a>
 ad0:	2a 81       	ldd	r18, Y+2	; 0x02
 ad2:	3b 81       	ldd	r19, Y+3	; 0x03
 ad4:	22 30       	cpi	r18, 0x02	; 2
 ad6:	31 05       	cpc	r19, r1
 ad8:	a1 f0       	breq	.+40     	; 0xb02 <MEXTI_voidClearFlag+0x5a>
 ada:	8a 81       	ldd	r24, Y+2	; 0x02
 adc:	9b 81       	ldd	r25, Y+3	; 0x03
 ade:	00 97       	sbiw	r24, 0x00	; 0
 ae0:	b9 f4       	brne	.+46     	; 0xb10 <MEXTI_voidClearFlag+0x68>
		{
		case EXTI0:
			SET_BIT(GIFR,EXTI0_ENABLE_BIT);
 ae2:	aa e5       	ldi	r26, 0x5A	; 90
 ae4:	b0 e0       	ldi	r27, 0x00	; 0
 ae6:	ea e5       	ldi	r30, 0x5A	; 90
 ae8:	f0 e0       	ldi	r31, 0x00	; 0
 aea:	80 81       	ld	r24, Z
 aec:	80 64       	ori	r24, 0x40	; 64
 aee:	8c 93       	st	X, r24
 af0:	0f c0       	rjmp	.+30     	; 0xb10 <MEXTI_voidClearFlag+0x68>
			break;
		case EXTI1:
			SET_BIT(GIFR,EXTI1_ENABLE_BIT);
 af2:	aa e5       	ldi	r26, 0x5A	; 90
 af4:	b0 e0       	ldi	r27, 0x00	; 0
 af6:	ea e5       	ldi	r30, 0x5A	; 90
 af8:	f0 e0       	ldi	r31, 0x00	; 0
 afa:	80 81       	ld	r24, Z
 afc:	80 68       	ori	r24, 0x80	; 128
 afe:	8c 93       	st	X, r24
 b00:	07 c0       	rjmp	.+14     	; 0xb10 <MEXTI_voidClearFlag+0x68>
			break;
		case EXTI2:
			SET_BIT(GIFR,EXTI2_ENABLE_BIT);
 b02:	aa e5       	ldi	r26, 0x5A	; 90
 b04:	b0 e0       	ldi	r27, 0x00	; 0
 b06:	ea e5       	ldi	r30, 0x5A	; 90
 b08:	f0 e0       	ldi	r31, 0x00	; 0
 b0a:	80 81       	ld	r24, Z
 b0c:	80 62       	ori	r24, 0x20	; 32
 b0e:	8c 93       	st	X, r24
			break;
		}
	}
}
 b10:	0f 90       	pop	r0
 b12:	0f 90       	pop	r0
 b14:	0f 90       	pop	r0
 b16:	cf 91       	pop	r28
 b18:	df 91       	pop	r29
 b1a:	08 95       	ret

00000b1c <MEXTI_voidSetCallBack>:

void MEXTI_voidSetCallBack (EXTI_ID A_EXTI_ID, void(*A_ptrToFunc)(void))
{
 b1c:	df 93       	push	r29
 b1e:	cf 93       	push	r28
 b20:	00 d0       	rcall	.+0      	; 0xb22 <MEXTI_voidSetCallBack+0x6>
 b22:	00 d0       	rcall	.+0      	; 0xb24 <MEXTI_voidSetCallBack+0x8>
 b24:	0f 92       	push	r0
 b26:	cd b7       	in	r28, 0x3d	; 61
 b28:	de b7       	in	r29, 0x3e	; 62
 b2a:	89 83       	std	Y+1, r24	; 0x01
 b2c:	7b 83       	std	Y+3, r23	; 0x03
 b2e:	6a 83       	std	Y+2, r22	; 0x02
	if((A_EXTI_ID <= EXTI2) && (A_ptrToFunc != NULL))
 b30:	89 81       	ldd	r24, Y+1	; 0x01
 b32:	83 30       	cpi	r24, 0x03	; 3
 b34:	58 f5       	brcc	.+86     	; 0xb8c <MEXTI_voidSetCallBack+0x70>
 b36:	8a 81       	ldd	r24, Y+2	; 0x02
 b38:	9b 81       	ldd	r25, Y+3	; 0x03
 b3a:	00 97       	sbiw	r24, 0x00	; 0
 b3c:	39 f1       	breq	.+78     	; 0xb8c <MEXTI_voidSetCallBack+0x70>
	{
		switch (A_EXTI_ID)
 b3e:	89 81       	ldd	r24, Y+1	; 0x01
 b40:	28 2f       	mov	r18, r24
 b42:	30 e0       	ldi	r19, 0x00	; 0
 b44:	3d 83       	std	Y+5, r19	; 0x05
 b46:	2c 83       	std	Y+4, r18	; 0x04
 b48:	8c 81       	ldd	r24, Y+4	; 0x04
 b4a:	9d 81       	ldd	r25, Y+5	; 0x05
 b4c:	81 30       	cpi	r24, 0x01	; 1
 b4e:	91 05       	cpc	r25, r1
 b50:	81 f0       	breq	.+32     	; 0xb72 <MEXTI_voidSetCallBack+0x56>
 b52:	2c 81       	ldd	r18, Y+4	; 0x04
 b54:	3d 81       	ldd	r19, Y+5	; 0x05
 b56:	22 30       	cpi	r18, 0x02	; 2
 b58:	31 05       	cpc	r19, r1
 b5a:	91 f0       	breq	.+36     	; 0xb80 <MEXTI_voidSetCallBack+0x64>
 b5c:	8c 81       	ldd	r24, Y+4	; 0x04
 b5e:	9d 81       	ldd	r25, Y+5	; 0x05
 b60:	00 97       	sbiw	r24, 0x00	; 0
 b62:	a1 f4       	brne	.+40     	; 0xb8c <MEXTI_voidSetCallBack+0x70>
		{
		case EXTI0:
			EXTI0_Callback = A_ptrToFunc;
 b64:	8a 81       	ldd	r24, Y+2	; 0x02
 b66:	9b 81       	ldd	r25, Y+3	; 0x03
 b68:	90 93 61 00 	sts	0x0061, r25
 b6c:	80 93 60 00 	sts	0x0060, r24
 b70:	0d c0       	rjmp	.+26     	; 0xb8c <MEXTI_voidSetCallBack+0x70>
			break;
		case EXTI1:
			EXTI1_Callback = A_ptrToFunc;
 b72:	8a 81       	ldd	r24, Y+2	; 0x02
 b74:	9b 81       	ldd	r25, Y+3	; 0x03
 b76:	90 93 63 00 	sts	0x0063, r25
 b7a:	80 93 62 00 	sts	0x0062, r24
 b7e:	06 c0       	rjmp	.+12     	; 0xb8c <MEXTI_voidSetCallBack+0x70>
			break;
		case EXTI2:
			EXTI2_Callback = A_ptrToFunc;
 b80:	8a 81       	ldd	r24, Y+2	; 0x02
 b82:	9b 81       	ldd	r25, Y+3	; 0x03
 b84:	90 93 65 00 	sts	0x0065, r25
 b88:	80 93 64 00 	sts	0x0064, r24
			break;
		}
	}
}
 b8c:	0f 90       	pop	r0
 b8e:	0f 90       	pop	r0
 b90:	0f 90       	pop	r0
 b92:	0f 90       	pop	r0
 b94:	0f 90       	pop	r0
 b96:	cf 91       	pop	r28
 b98:	df 91       	pop	r29
 b9a:	08 95       	ret

00000b9c <__vector_1>:

void __vector_1(void) __attribute__((signal));
void __vector_1(void)
{
 b9c:	1f 92       	push	r1
 b9e:	0f 92       	push	r0
 ba0:	0f b6       	in	r0, 0x3f	; 63
 ba2:	0f 92       	push	r0
 ba4:	11 24       	eor	r1, r1
 ba6:	2f 93       	push	r18
 ba8:	3f 93       	push	r19
 baa:	4f 93       	push	r20
 bac:	5f 93       	push	r21
 bae:	6f 93       	push	r22
 bb0:	7f 93       	push	r23
 bb2:	8f 93       	push	r24
 bb4:	9f 93       	push	r25
 bb6:	af 93       	push	r26
 bb8:	bf 93       	push	r27
 bba:	ef 93       	push	r30
 bbc:	ff 93       	push	r31
 bbe:	df 93       	push	r29
 bc0:	cf 93       	push	r28
 bc2:	cd b7       	in	r28, 0x3d	; 61
 bc4:	de b7       	in	r29, 0x3e	; 62
	if (EXTI0_Callback != NULL)
 bc6:	80 91 60 00 	lds	r24, 0x0060
 bca:	90 91 61 00 	lds	r25, 0x0061
 bce:	00 97       	sbiw	r24, 0x00	; 0
 bd0:	29 f0       	breq	.+10     	; 0xbdc <__vector_1+0x40>
	{
		EXTI0_Callback();
 bd2:	e0 91 60 00 	lds	r30, 0x0060
 bd6:	f0 91 61 00 	lds	r31, 0x0061
 bda:	09 95       	icall
	}
}
 bdc:	cf 91       	pop	r28
 bde:	df 91       	pop	r29
 be0:	ff 91       	pop	r31
 be2:	ef 91       	pop	r30
 be4:	bf 91       	pop	r27
 be6:	af 91       	pop	r26
 be8:	9f 91       	pop	r25
 bea:	8f 91       	pop	r24
 bec:	7f 91       	pop	r23
 bee:	6f 91       	pop	r22
 bf0:	5f 91       	pop	r21
 bf2:	4f 91       	pop	r20
 bf4:	3f 91       	pop	r19
 bf6:	2f 91       	pop	r18
 bf8:	0f 90       	pop	r0
 bfa:	0f be       	out	0x3f, r0	; 63
 bfc:	0f 90       	pop	r0
 bfe:	1f 90       	pop	r1
 c00:	18 95       	reti

00000c02 <__vector_2>:

void __vector_2(void) __attribute__((signal));
void __vector_2(void)
{
 c02:	1f 92       	push	r1
 c04:	0f 92       	push	r0
 c06:	0f b6       	in	r0, 0x3f	; 63
 c08:	0f 92       	push	r0
 c0a:	11 24       	eor	r1, r1
 c0c:	2f 93       	push	r18
 c0e:	3f 93       	push	r19
 c10:	4f 93       	push	r20
 c12:	5f 93       	push	r21
 c14:	6f 93       	push	r22
 c16:	7f 93       	push	r23
 c18:	8f 93       	push	r24
 c1a:	9f 93       	push	r25
 c1c:	af 93       	push	r26
 c1e:	bf 93       	push	r27
 c20:	ef 93       	push	r30
 c22:	ff 93       	push	r31
 c24:	df 93       	push	r29
 c26:	cf 93       	push	r28
 c28:	cd b7       	in	r28, 0x3d	; 61
 c2a:	de b7       	in	r29, 0x3e	; 62
	if (EXTI1_Callback != NULL)
 c2c:	80 91 62 00 	lds	r24, 0x0062
 c30:	90 91 63 00 	lds	r25, 0x0063
 c34:	00 97       	sbiw	r24, 0x00	; 0
 c36:	29 f0       	breq	.+10     	; 0xc42 <__vector_2+0x40>
	{
		EXTI1_Callback();
 c38:	e0 91 62 00 	lds	r30, 0x0062
 c3c:	f0 91 63 00 	lds	r31, 0x0063
 c40:	09 95       	icall
	}
}
 c42:	cf 91       	pop	r28
 c44:	df 91       	pop	r29
 c46:	ff 91       	pop	r31
 c48:	ef 91       	pop	r30
 c4a:	bf 91       	pop	r27
 c4c:	af 91       	pop	r26
 c4e:	9f 91       	pop	r25
 c50:	8f 91       	pop	r24
 c52:	7f 91       	pop	r23
 c54:	6f 91       	pop	r22
 c56:	5f 91       	pop	r21
 c58:	4f 91       	pop	r20
 c5a:	3f 91       	pop	r19
 c5c:	2f 91       	pop	r18
 c5e:	0f 90       	pop	r0
 c60:	0f be       	out	0x3f, r0	; 63
 c62:	0f 90       	pop	r0
 c64:	1f 90       	pop	r1
 c66:	18 95       	reti

00000c68 <__vector_3>:

void __vector_3(void) __attribute__((signal));
void __vector_3(void)
{
 c68:	1f 92       	push	r1
 c6a:	0f 92       	push	r0
 c6c:	0f b6       	in	r0, 0x3f	; 63
 c6e:	0f 92       	push	r0
 c70:	11 24       	eor	r1, r1
 c72:	2f 93       	push	r18
 c74:	3f 93       	push	r19
 c76:	4f 93       	push	r20
 c78:	5f 93       	push	r21
 c7a:	6f 93       	push	r22
 c7c:	7f 93       	push	r23
 c7e:	8f 93       	push	r24
 c80:	9f 93       	push	r25
 c82:	af 93       	push	r26
 c84:	bf 93       	push	r27
 c86:	ef 93       	push	r30
 c88:	ff 93       	push	r31
 c8a:	df 93       	push	r29
 c8c:	cf 93       	push	r28
 c8e:	cd b7       	in	r28, 0x3d	; 61
 c90:	de b7       	in	r29, 0x3e	; 62
	if (EXTI2_Callback != NULL)
 c92:	80 91 64 00 	lds	r24, 0x0064
 c96:	90 91 65 00 	lds	r25, 0x0065
 c9a:	00 97       	sbiw	r24, 0x00	; 0
 c9c:	29 f0       	breq	.+10     	; 0xca8 <__vector_3+0x40>
	{
		EXTI2_Callback();
 c9e:	e0 91 64 00 	lds	r30, 0x0064
 ca2:	f0 91 65 00 	lds	r31, 0x0065
 ca6:	09 95       	icall
	}
}
 ca8:	cf 91       	pop	r28
 caa:	df 91       	pop	r29
 cac:	ff 91       	pop	r31
 cae:	ef 91       	pop	r30
 cb0:	bf 91       	pop	r27
 cb2:	af 91       	pop	r26
 cb4:	9f 91       	pop	r25
 cb6:	8f 91       	pop	r24
 cb8:	7f 91       	pop	r23
 cba:	6f 91       	pop	r22
 cbc:	5f 91       	pop	r21
 cbe:	4f 91       	pop	r20
 cc0:	3f 91       	pop	r19
 cc2:	2f 91       	pop	r18
 cc4:	0f 90       	pop	r0
 cc6:	0f be       	out	0x3f, r0	; 63
 cc8:	0f 90       	pop	r0
 cca:	1f 90       	pop	r1
 ccc:	18 95       	reti

00000cce <MGI_voidEnable>:
#include "../Include/MCAL/GI/GI_private.h"
#include "../Include/MCAL/GI/GI_configuration.h"


void MGI_voidEnable (void)
{
 cce:	df 93       	push	r29
 cd0:	cf 93       	push	r28
 cd2:	cd b7       	in	r28, 0x3d	; 61
 cd4:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,GLOBAL_INTERRUPT_ENABLE_BIT);
 cd6:	af e5       	ldi	r26, 0x5F	; 95
 cd8:	b0 e0       	ldi	r27, 0x00	; 0
 cda:	ef e5       	ldi	r30, 0x5F	; 95
 cdc:	f0 e0       	ldi	r31, 0x00	; 0
 cde:	80 81       	ld	r24, Z
 ce0:	80 68       	ori	r24, 0x80	; 128
 ce2:	8c 93       	st	X, r24
}
 ce4:	cf 91       	pop	r28
 ce6:	df 91       	pop	r29
 ce8:	08 95       	ret

00000cea <MGI_voidDisable>:
void MGI_voidDisable (void)
{
 cea:	df 93       	push	r29
 cec:	cf 93       	push	r28
 cee:	cd b7       	in	r28, 0x3d	; 61
 cf0:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG,GLOBAL_INTERRUPT_ENABLE_BIT);
 cf2:	af e5       	ldi	r26, 0x5F	; 95
 cf4:	b0 e0       	ldi	r27, 0x00	; 0
 cf6:	ef e5       	ldi	r30, 0x5F	; 95
 cf8:	f0 e0       	ldi	r31, 0x00	; 0
 cfa:	80 81       	ld	r24, Z
 cfc:	8f 77       	andi	r24, 0x7F	; 127
 cfe:	8c 93       	st	X, r24
}
 d00:	cf 91       	pop	r28
 d02:	df 91       	pop	r29
 d04:	08 95       	ret

00000d06 <HLED_voidTurnOn>:
 * HAL
 */


void HLED_voidTurnOn  (DIO_PORT_e A_DIOPort,DIO_PIN_e A_PINID)
{
 d06:	df 93       	push	r29
 d08:	cf 93       	push	r28
 d0a:	00 d0       	rcall	.+0      	; 0xd0c <HLED_voidTurnOn+0x6>
 d0c:	cd b7       	in	r28, 0x3d	; 61
 d0e:	de b7       	in	r29, 0x3e	; 62
 d10:	89 83       	std	Y+1, r24	; 0x01
 d12:	6a 83       	std	Y+2, r22	; 0x02
	MDIO_voidSetPinValue(A_DIOPort, A_PINID, DIO_SET);
 d14:	89 81       	ldd	r24, Y+1	; 0x01
 d16:	6a 81       	ldd	r22, Y+2	; 0x02
 d18:	41 e0       	ldi	r20, 0x01	; 1
 d1a:	0e 94 9a 01 	call	0x334	; 0x334 <MDIO_voidSetPinValue>
}
 d1e:	0f 90       	pop	r0
 d20:	0f 90       	pop	r0
 d22:	cf 91       	pop	r28
 d24:	df 91       	pop	r29
 d26:	08 95       	ret

00000d28 <HLED_voidTurnOff>:
void HLED_voidTurnOff (DIO_PORT_e A_DIOPort,DIO_PIN_e A_PINID)
{
 d28:	df 93       	push	r29
 d2a:	cf 93       	push	r28
 d2c:	00 d0       	rcall	.+0      	; 0xd2e <HLED_voidTurnOff+0x6>
 d2e:	cd b7       	in	r28, 0x3d	; 61
 d30:	de b7       	in	r29, 0x3e	; 62
 d32:	89 83       	std	Y+1, r24	; 0x01
 d34:	6a 83       	std	Y+2, r22	; 0x02
	MDIO_voidSetPinValue(A_DIOPort, A_PINID, DIO_RESET);
 d36:	89 81       	ldd	r24, Y+1	; 0x01
 d38:	6a 81       	ldd	r22, Y+2	; 0x02
 d3a:	40 e0       	ldi	r20, 0x00	; 0
 d3c:	0e 94 9a 01 	call	0x334	; 0x334 <MDIO_voidSetPinValue>
}
 d40:	0f 90       	pop	r0
 d42:	0f 90       	pop	r0
 d44:	cf 91       	pop	r28
 d46:	df 91       	pop	r29
 d48:	08 95       	ret

00000d4a <HLED_voidToggleLED>:
void HLED_voidToggleLED (DIO_PORT_e A_DIOPort,DIO_PIN_e A_PINID)
{
 d4a:	df 93       	push	r29
 d4c:	cf 93       	push	r28
 d4e:	00 d0       	rcall	.+0      	; 0xd50 <HLED_voidToggleLED+0x6>
 d50:	cd b7       	in	r28, 0x3d	; 61
 d52:	de b7       	in	r29, 0x3e	; 62
 d54:	89 83       	std	Y+1, r24	; 0x01
 d56:	6a 83       	std	Y+2, r22	; 0x02
	MDIO_voidTogglePinValue(A_DIOPort, A_PINID);
 d58:	89 81       	ldd	r24, Y+1	; 0x01
 d5a:	6a 81       	ldd	r22, Y+2	; 0x02
 d5c:	0e 94 3e 03 	call	0x67c	; 0x67c <MDIO_voidTogglePinValue>
}
 d60:	0f 90       	pop	r0
 d62:	0f 90       	pop	r0
 d64:	cf 91       	pop	r28
 d66:	df 91       	pop	r29
 d68:	08 95       	ret

00000d6a <_exit>:
 d6a:	f8 94       	cli

00000d6c <__stop_program>:
 d6c:	ff cf       	rjmp	.-2      	; 0xd6c <__stop_program>
